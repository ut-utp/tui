warning: lint `legacy_directory_ownership` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/37872`
  --> macros/src/lib.rs:11:5
   |
11 |     legacy_directory_ownership,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `plugin_as_library` has been removed: `plugins have been deprecated and retired`
  --> macros/src/lib.rs:17:5
   |
17 |     plugin_as_library,
   |     ^^^^^^^^^^^^^^^^^

warning: lint `safe_extern_statics` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/36247`
  --> macros/src/lib.rs:19:5
   |
19 |     safe_extern_statics,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `proc_macro::TokenTree`
  --> macros/src/lib.rs:62:5
   |
62 | use proc_macro::TokenTree;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> macros/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: `extern crate` is not idiomatic in the new edition
  --> macros/src/lib.rs:45:1
   |
45 | extern crate proc_macro;
   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `use`
   |
note: the lint level is defined here
  --> macros/src/lib.rs:40:5
   |
40 |     rust_2018_idioms
   |     ^^^^^^^^^^^^^^^^
   = note: `#[warn(unused_extern_crates)]` implied by `#[warn(rust_2018_idioms)]`

warning: function is never used: `spanned_err`
  --> macros/src/lib.rs:50:15
   |
50 | pub(crate) fn spanned_err(span: Span, msg: impl Into<String>) -> proc_macro::TokenStream {
   |               ^^^^^^^^^^^
   |
note: the lint level is defined here
  --> macros/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`

warning: missing documentation for a function
  --> macros/src/lib.rs:96:1
   |
96 | pub fn create_label(tokens: proc_macro::TokenStream) -> proc_macro::TokenStream {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> macros/src/lib.rs:32:5
   |
32 |     missing_docs,
   |     ^^^^^^^^^^^^

warning: missing documentation for a function
   --> macros/src/lib.rs:114:1
    |
114 | pub fn derive_display_from_debug(item: proc_macro::TokenStream) -> proc_macro::TokenStream {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: lint `legacy_directory_ownership` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/37872`
  --> isa/src/lib.rs:11:5
   |
11 |     legacy_directory_ownership,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `plugin_as_library` has been removed: `plugins have been deprecated and retired`
  --> isa/src/lib.rs:17:5
   |
17 |     plugin_as_library,
   |     ^^^^^^^^^^^^^^^^^

warning: lint `safe_extern_statics` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/36247`
  --> isa/src/lib.rs:19:5
   |
19 |     safe_extern_statics,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for macro
  --> isa/src/macros.rs:9:1
   |
9  | macro_rules! insn {
   | ^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> isa/src/lib.rs:32:5
   |
32 |     missing_docs,
   |     ^^^^^^^^^^^^

warning: missing documentation for macro
   --> isa/src/macros.rs:105:1
    |
105 | macro_rules! word {
    | ^^^^^^^^^^^^^^^^^

warning: missing documentation for macro
   --> isa/src/macros.rs:180:1
    |
180 | macro_rules! loadable {
    | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for macro
   --> isa/src/macros.rs:201:1
    |
201 | macro_rules! program {
    | ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:76:1
   |
76 | pub const PSR: Addr = 0xFFFC;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:77:1
   |
77 | pub const MCR: Addr = 0xFFFE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:79:1
   |
79 | pub const OS_START_ADDR: Addr = 0x0200; // TODO: should this go here?
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:81:1
   |
81 | pub const MEM_MAPPED_START_ADDR: Addr = 0xFE00;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:82:1
   |
82 | pub const USER_PROGRAM_START_ADDR: Addr = 0x3000;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:84:1
   |
84 | pub const TRAP_VECTOR_TABLE_START_ADDR: Addr = 0x0000;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:85:1
   |
85 | pub const NUM_TRAP_VECTORS: Addr = 256;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:87:1
   |
87 | pub const INTERRUPT_VECTOR_TABLE_START_ADDR: Addr = 0x0100;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:89:1
   |
89 | pub const EXCEPTION_SERVICE_ROUTINES_START_ADDR: Addr = INTERRUPT_VECTOR_TABLE_START_ADDR;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:90:1
   |
90 | pub const NUM_EXCEPTION_SERVICE_ROUTINES: Addr = 128;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:92:1
   |
92 | / pub const INTERRUPT_SERVICE_ROUTINES_START_ADDR: Addr =
93 | |     INTERRUPT_VECTOR_TABLE_START_ADDR + NUM_EXCEPTION_SERVICE_ROUTINES;
   | |_______________________________________________________________________^

warning: missing documentation for a constant
  --> isa/src/lib.rs:94:1
   |
94 | pub const NUM_INTERRUPT_SERVICE_ROUTINES: Addr = 128;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:96:1
   |
96 | pub const PRIVILEGE_MODE_VIOLATION_EXCEPTION_VECTOR: u8 = 0x00;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:97:1
   |
97 | pub const ILLEGAL_OPCODE_EXCEPTION_VECTOR: u8 = 0x01;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> isa/src/lib.rs:98:1
   |
98 | pub const ACCESS_CONTROL_VIOLATION_EXCEPTION_VECTOR: u8 = 0x02; // TODO: Verify
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> isa/src/isa.rs:14:1
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:26
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                          ^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:31
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                               ^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:36
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                                    ^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:41
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                                         ^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:46
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                                              ^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:51
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                                                   ^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:56
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                                                        ^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:14:61
   |
14 | pub enum PriorityLevel { PL0, PL1, PL2, PL3, PL4, PL5, PL6, PL7 }
   |                                                             ^^^

warning: missing documentation for an associated constant
  --> isa/src/isa.rs:18:5
   |
18 |     pub const NUM_LEVELS: usize = 8;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> isa/src/isa.rs:20:5
   |
20 |     pub const LEVELS: [PriorityLevel; PriorityLevel::NUM_LEVELS] = {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> isa/src/isa.rs:90:1
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   | ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:16
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                ^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:20
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                    ^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:24
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                        ^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:28
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                            ^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:32
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                                ^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:36
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                                    ^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:40
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                                        ^^

warning: missing documentation for a variant
  --> isa/src/isa.rs:90:44
   |
90 | pub enum Reg { R0, R1, R2, R3, R4, R5, R6, R7 }
   |                                            ^^

warning: missing documentation for an associated constant
  --> isa/src/isa.rs:94:5
   |
94 |     pub const NUM_REGS: usize = 8;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> isa/src/isa.rs:96:5
   |
96 |     pub const REGS: [Reg; Reg::NUM_REGS] = {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
   --> isa/src/isa.rs:226:1
    |
226 | pub enum Instruction {
    | ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:227:5
    |
227 |     AddReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |     ^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:227:14
    |
227 |     AddReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |              ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:227:23
    |
227 |     AddReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |                       ^^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:227:33
    |
227 |     AddReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |                                 ^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:228:5
    |
228 |     AddImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |     ^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:228:14
    |
228 |     AddImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |              ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:228:23
    |
228 |     AddImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |                       ^^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:228:33
    |
228 |     AddImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |                                 ^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:229:5
    |
229 |     AndReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |     ^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:229:14
    |
229 |     AndReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |              ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:229:23
    |
229 |     AndReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |                       ^^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:229:33
    |
229 |     AndReg { dr: Reg, sr1: Reg, sr2: Reg },         // RRR
    |                                 ^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:230:5
    |
230 |     AndImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |     ^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:230:14
    |
230 |     AndImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |              ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:230:23
    |
230 |     AndImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |                       ^^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:230:33
    |
230 |     AndImm { dr: Reg, sr1: Reg, imm5: Sw },         // RR5
    |                                 ^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:231:5
    |
231 |     Br { n: bool, z: bool, p: bool, offset9: Sw },  // nzp9
    |     ^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:231:10
    |
231 |     Br { n: bool, z: bool, p: bool, offset9: Sw },  // nzp9
    |          ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:231:19
    |
231 |     Br { n: bool, z: bool, p: bool, offset9: Sw },  // nzp9
    |                   ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:231:28
    |
231 |     Br { n: bool, z: bool, p: bool, offset9: Sw },  // nzp9
    |                            ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:231:37
    |
231 |     Br { n: bool, z: bool, p: bool, offset9: Sw },  // nzp9
    |                                     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:232:5
    |
232 |     Jmp { base: Reg },                              // B
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:232:11
    |
232 |     Jmp { base: Reg },                              // B
    |           ^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:233:5
    |
233 |     Jsr { offset11: Sw },                           // a
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:233:11
    |
233 |     Jsr { offset11: Sw },                           // a
    |           ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:234:5
    |
234 |     Jsrr { base: Reg },                             // B
    |     ^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:234:12
    |
234 |     Jsrr { base: Reg },                             // B
    |            ^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:235:5
    |
235 |     Ld { dr: Reg, offset9: Sw },                    // R9
    |     ^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:235:10
    |
235 |     Ld { dr: Reg, offset9: Sw },                    // R9
    |          ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:235:19
    |
235 |     Ld { dr: Reg, offset9: Sw },                    // R9
    |                   ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:236:5
    |
236 |     Ldi { dr: Reg, offset9: Sw },                   // R9
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:236:11
    |
236 |     Ldi { dr: Reg, offset9: Sw },                   // R9
    |           ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:236:20
    |
236 |     Ldi { dr: Reg, offset9: Sw },                   // R9
    |                    ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:237:5
    |
237 |     Ldr { dr: Reg, base: Reg, offset6: Sw },        // RR6
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:237:11
    |
237 |     Ldr { dr: Reg, base: Reg, offset6: Sw },        // RR6
    |           ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:237:20
    |
237 |     Ldr { dr: Reg, base: Reg, offset6: Sw },        // RR6
    |                    ^^^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:237:31
    |
237 |     Ldr { dr: Reg, base: Reg, offset6: Sw },        // RR6
    |                               ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:238:5
    |
238 |     Lea { dr: Reg, offset9: Sw },                   // R9
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:238:11
    |
238 |     Lea { dr: Reg, offset9: Sw },                   // R9
    |           ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:238:20
    |
238 |     Lea { dr: Reg, offset9: Sw },                   // R9
    |                    ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:239:5
    |
239 |     Not { dr: Reg, sr: Reg },                       // RR
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:239:11
    |
239 |     Not { dr: Reg, sr: Reg },                       // RR
    |           ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:239:20
    |
239 |     Not { dr: Reg, sr: Reg },                       // RR
    |                    ^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:240:5
    |
240 |     Ret,                                            //
    |     ^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:241:5
    |
241 |     Rti,                                            //
    |     ^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:242:5
    |
242 |     St { sr: Reg, offset9: Sw },                    // R9
    |     ^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:242:10
    |
242 |     St { sr: Reg, offset9: Sw },                    // R9
    |          ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:242:19
    |
242 |     St { sr: Reg, offset9: Sw },                    // R9
    |                   ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:243:5
    |
243 |     Sti { sr: Reg, offset9: Sw },                   // R9
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:243:11
    |
243 |     Sti { sr: Reg, offset9: Sw },                   // R9
    |           ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:243:20
    |
243 |     Sti { sr: Reg, offset9: Sw },                   // R9
    |                    ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:244:5
    |
244 |     Str { sr: Reg, base: Reg, offset6: Sw },        // RR6
    |     ^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:244:11
    |
244 |     Str { sr: Reg, base: Reg, offset6: Sw },        // RR6
    |           ^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:244:20
    |
244 |     Str { sr: Reg, base: Reg, offset6: Sw },        // RR6
    |                    ^^^^^^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:244:31
    |
244 |     Str { sr: Reg, base: Reg, offset6: Sw },        // RR6
    |                               ^^^^^^^^^^^

warning: missing documentation for a variant
   --> isa/src/isa.rs:245:5
    |
245 |     Trap { trapvec: u8 },                           // 8
    |     ^^^^

warning: missing documentation for a struct field
   --> isa/src/isa.rs:245:12
    |
245 |     Trap { trapvec: u8 },                           // 8
    |            ^^^^^^^^^^^

warning: missing documentation for a function
   --> isa/src/isa.rs:269:1
    |
269 | pub const fn check_signed_imm(imm: SignedWord, num_bits: u32) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:477:5
    |
477 |     pub const fn new_ld(dr: Reg, offset9: SignedWord) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:488:5
    |
488 |     pub const fn new_ldi(dr: Reg, offset9: SignedWord) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:499:5
    |
499 |     pub const fn new_ldr(dr: Reg, base: Reg, offset6: SignedWord) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:510:5
    |
510 |     pub const fn new_lea(dr: Reg, offset9: SignedWord) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:521:5
    |
521 |     pub const fn new_not(dr: Reg, sr: Reg) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:548:5
    |
548 |     pub const fn new_st(sr: Reg, offset9: SignedWord) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:559:5
    |
559 |     pub const fn new_sti(sr: Reg, offset9: SignedWord) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:570:5
    |
570 |     pub const fn new_str(sr: Reg, base: Reg, offset6: SignedWord) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:581:5
    |
581 |     pub const fn new_trap(trapvec: u8) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/isa.rs:588:5
    |
588 |     pub fn sets_condition_codes(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> isa/src/isa.rs:615:1
    |
615 | pub trait Bits: Sized + Copy {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:616:5
    |
616 |     fn bit(self, bit: u32) -> bool;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:618:5
    |
618 |     fn b(self, bit: u32) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:622:5
    |
622 |     fn bits(self, range: Range<u32>) -> usize;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:624:5
    |
624 |     fn u8(self, range: Range<u32>) -> u8 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:629:5
    |
629 |     fn i8(self, range: Range<u32>) -> i8 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:639:5
    |
639 |     fn u16(self, range: Range<u32>) -> u16 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:644:5
    |
644 |     fn word(self, range: Range<u32>) -> Word {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:648:5
    |
648 |     fn select(self, range: Range<u32>) -> Word {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:653:5
    |
653 |     fn i16(self, range: Range<u32>) -> i16 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:663:5
    |
663 |     fn u32(self, range: Range<u32>) -> u32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:668:5
    |
668 |     fn i32(self, range: Range<u32>) -> i32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/isa.rs:678:5
    |
678 |     fn reg(self, lowest_bit: u32) -> Reg {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a module
   --> isa/src/misc.rs:298:1
    |
298 | pub mod util {
    | ^^^^^^^^^^^^

warning: missing documentation for a struct
   --> isa/src/misc.rs:306:5
    |
306 |     pub struct MemoryDump(pub [Word; ADDR_SPACE_SIZE_IN_WORDS]);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
   --> isa/src/misc.rs:306:5
    |
306 |     pub struct MemoryDump(pub [Word; ADDR_SPACE_SIZE_IN_WORDS]);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> isa/src/lib.rs:30:5
    |
30  |     missing_debug_implementations,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/misc.rs:328:9
    |
328 |         pub fn blank() -> Self {
    |         ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> isa/src/misc.rs:332:9
    |
332 |         pub fn layer_loadable<L: LoadableIterator>(&mut self, loadable: L) -> &mut Self {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> isa/src/misc.rs:364:5
    |
364 |     pub struct AssembledProgram(pub [(Word, bool); ADDR_SPACE_SIZE_IN_WORDS]);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
   --> isa/src/misc.rs:364:5
    |
364 |     pub struct AssembledProgram(pub [(Word, bool); ADDR_SPACE_SIZE_IN_WORDS]);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> isa/src/misc.rs:386:5
    |
386 |     pub trait LoadableIterator: IntoIterator<Item = (Addr, Word)> + Sized {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> isa/src/misc.rs:387:9
    |
387 |         fn to_memory_dump(self) -> MemoryDump {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: lint `legacy_directory_ownership` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/37872`
  --> traits/src/lib.rs:11:5
   |
11 |     legacy_directory_ownership,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `plugin_as_library` has been removed: `plugins have been deprecated and retired`
  --> traits/src/lib.rs:17:5
   |
17 |     plugin_as_library,
   |     ^^^^^^^^^^^^^^^^^

warning: lint `safe_extern_statics` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/36247`
  --> traits/src/lib.rs:19:5
   |
19 |     safe_extern_statics,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `AdcPinArr`
  --> traits/src/peripherals/stubs.rs:40:36
   |
40 | use super::adc::{AdcPin, AdcState, AdcPinArr, AdcReadError};
   |                                    ^^^^^^^^^
   |
note: the lint level is defined here
  --> traits/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `PwmPinArr`
  --> traits/src/peripherals/stubs.rs:51:55
   |
51 | use super::pwm::{PwmPin, PwmState, PwmSetPeriodError, PwmPinArr, PwmSetDutyError};
   |                                                       ^^^^^^^^^

warning: unused import: `EventFutureSharedState`
 --> traits/src/control/rpc/device.rs:8:29
  |
8 | use super::{Encode, Decode, EventFutureSharedState, Transport};
  |                             ^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `f`
  --> traits/src/error.rs:33:19
   |
33 |     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
   |                   ^ help: consider prefixing with an underscore: `_f`
   |
note: the lint level is defined here
  --> traits/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

warning: unused variable: `f`
  --> traits/src/control/snapshot.rs:27:19
   |
27 |     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
   |                   ^ help: consider prefixing with an underscore: `_f`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:25:29
   |
25 |     fn set_state(&mut self, pin: GpioPin, state: GpioState) -> Result<(), GpioMiscError> { Err(GpioMiscError) }
   |                             ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `state`
  --> traits/src/peripherals/stubs.rs:25:43
   |
25 |     fn set_state(&mut self, pin: GpioPin, state: GpioState) -> Result<(), GpioMiscError> { Err(GpioMiscError) }
   |                                           ^^^^^ help: consider prefixing with an underscore: `_state`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:26:25
   |
26 |     fn get_state(&self, pin: GpioPin) -> GpioState { GpioState::Disabled }
   |                         ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `bit`
  --> traits/src/peripherals/stubs.rs:29:39
   |
29 |     fn write(&mut self, pin: GpioPin, bit: bool) -> Result<(), GpioWriteError> { Err(GpioWriteError((pin, GpioState::Disabled))) }
   |                                       ^^^ help: consider prefixing with an underscore: `_bit`

warning: unused variable: `flags`
  --> traits/src/peripherals/stubs.rs:31:44
   |
31 |     fn register_interrupt_flags(&mut self, flags: &'a GpioPinArr<AtomicBool>) {}
   |                                            ^^^^^ help: consider prefixing with an underscore: `_flags`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:32:34
   |
32 |     fn interrupt_occurred(&self, pin: GpioPin) -> bool { false }
   |                                  ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:33:40
   |
33 |     fn reset_interrupt_flag(&mut self, pin: GpioPin) { }
   |                                        ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:34:34
   |
34 |     fn interrupts_enabled(&self, pin: GpioPin) -> bool { false }
   |                                  ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:42:29
   |
42 |     fn set_state(&mut self, pin: AdcPin, _: AdcState) -> Result<(), ()> { Err(()) }
   |                             ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:43:25
   |
43 |     fn get_state(&self, pin: AdcPin) -> AdcState { AdcState::Disabled }
   |                         ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `state`
  --> traits/src/peripherals/stubs.rs:53:42
   |
53 |     fn set_state(&mut self, pin: PwmPin, state: PwmState) -> Result<(), PwmSetPeriodError> { Err(PwmSetPeriodError(pin)) }
   |                                          ^^^^^ help: consider prefixing with an underscore: `_state`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:54:25
   |
54 |     fn get_state(&self, pin: PwmPin) -> PwmState { PwmState::Disabled }
   |                         ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:56:23
   |
56 |     fn get_pin(&self, pin: PwmPin) -> bool { false }
   |                       ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `duty`
  --> traits/src/peripherals/stubs.rs:57:47
   |
57 |     fn set_duty_cycle(&mut self, pin: PwmPin, duty: u8) -> Result<(), PwmSetDutyError> { Err(PwmSetDutyError(pin)) }
   |                                               ^^^^ help: consider prefixing with an underscore: `_duty`

warning: unused variable: `pin`
  --> traits/src/peripherals/stubs.rs:59:30
   |
59 |     fn get_duty_cycle(&self, pin: PwmPin) -> u8 { 0 }
   |                              ^^^ help: consider prefixing with an underscore: `_pin`

warning: unused variable: `timer`
  --> traits/src/peripherals/stubs.rs:67:29
   |
67 |     fn set_state(&mut self, timer: TimerId, state: TimerState) -> Result<(), TimerMiscError> { Err(TimerMiscError) }
   |                             ^^^^^ help: consider prefixing with an underscore: `_timer`

warning: unused variable: `state`
  --> traits/src/peripherals/stubs.rs:67:45
   |
67 |     fn set_state(&mut self, timer: TimerId, state: TimerState) -> Result<(), TimerMiscError> { Err(TimerMiscError) }
   |                                             ^^^^^ help: consider prefixing with an underscore: `_state`

warning: unused variable: `timer`
  --> traits/src/peripherals/stubs.rs:68:25
   |
68 |     fn get_state(&self, timer: TimerId) -> TimerState { TimerState::Disabled }
   |                         ^^^^^ help: consider prefixing with an underscore: `_timer`

warning: unused variable: `timer`
  --> traits/src/peripherals/stubs.rs:70:30
   |
70 |     fn set_period(&mut self, timer: TimerId, ms: Word) -> Result<(), TimerMiscError> { Err(TimerMiscError) }
   |                              ^^^^^ help: consider prefixing with an underscore: `_timer`

warning: unused variable: `ms`
  --> traits/src/peripherals/stubs.rs:70:46
   |
70 |     fn set_period(&mut self, timer: TimerId, ms: Word) -> Result<(), TimerMiscError> { Err(TimerMiscError) }
   |                                              ^^ help: consider prefixing with an underscore: `_ms`

warning: unused variable: `timer`
  --> traits/src/peripherals/stubs.rs:71:26
   |
71 |     fn get_period(&self, timer: TimerId) -> Word { 0 }
   |                          ^^^^^ help: consider prefixing with an underscore: `_timer`

warning: unused variable: `flags`
  --> traits/src/peripherals/stubs.rs:73:44
   |
73 |     fn register_interrupt_flags(&mut self, flags: &'a TimerArr<AtomicBool>) {}
   |                                            ^^^^^ help: consider prefixing with an underscore: `_flags`

warning: unused variable: `timer`
  --> traits/src/peripherals/stubs.rs:74:34
   |
74 |     fn interrupt_occurred(&self, timer: TimerId) -> bool { false }
   |                                  ^^^^^ help: consider prefixing with an underscore: `_timer`

warning: unused variable: `timer`
  --> traits/src/peripherals/stubs.rs:75:40
   |
75 |     fn reset_interrupt_flag(&mut self, timer: TimerId) { }
   |                                        ^^^^^ help: consider prefixing with an underscore: `_timer`

warning: unused variable: `timer`
  --> traits/src/peripherals/stubs.rs:76:34
   |
76 |     fn interrupts_enabled(&self, timer: TimerId) -> bool { false }
   |                                  ^^^^^ help: consider prefixing with an underscore: `_timer`

warning: unused variable: `ms`
  --> traits/src/peripherals/stubs.rs:84:36
   |
84 |     fn set_milliseconds(&mut self, ms: Word) { }
   |                                    ^^ help: consider prefixing with an underscore: `_ms`

warning: unused variable: `flag`
  --> traits/src/peripherals/stubs.rs:95:43
   |
95 |     fn register_interrupt_flag(&mut self, flag: &'a AtomicBool) { }
   |                                           ^^^^ help: consider prefixing with an underscore: `_flag`

warning: unused variable: `bit`
  --> traits/src/peripherals/stubs.rs:98:44
   |
98 |     fn set_interrupt_enable_bit(&mut self, bit: bool) { }
   |                                            ^^^ help: consider prefixing with an underscore: `_bit`

warning: unused variable: `c`
   --> traits/src/peripherals/stubs.rs:107:30
    |
107 |     fn write_data(&mut self, c: u8) -> Result<(), OutputError> { Ok(()) }
    |                              ^ help: consider prefixing with an underscore: `_c`

warning: unused variable: `flag`
   --> traits/src/peripherals/stubs.rs:110:43
    |
110 |     fn register_interrupt_flag(&mut self, flag: &'a AtomicBool) { }
    |                                           ^^^^ help: consider prefixing with an underscore: `_flag`

warning: unused variable: `bit`
   --> traits/src/peripherals/stubs.rs:113:44
    |
113 |     fn set_interrupt_enable_bit(&mut self, bit: bool) { }
    |                                            ^^^ help: consider prefixing with an underscore: `_bit`

warning: missing documentation for a module
  --> traits/src/lib.rs:50:1
   |
50 | pub mod test_infrastructure;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> traits/src/lib.rs:32:5
   |
32 |     missing_docs,
   |     ^^^^^^^^^^^^

warning: missing documentation for a module
  --> traits/src/lib.rs:52:1
   |
52 | pub mod error;
   | ^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/error.rs:22:1
   |
22 | pub enum Error {
   | ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:23:5
   |
23 |     InvalidGpioWrite(GpioWriteError),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:24:5
   |
24 |     InvalidGpioWrites(GpioWriteErrors),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:25:5
   |
25 |     InvalidGpioRead(GpioReadError),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:26:5
   |
26 |     InvalidGpioReads(GpioReadErrors),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:27:5
   |
27 |     GpioMiscError(GpioMiscError), // Unclear if we want to expose these kind of errors in the Control interface or just make the interpreter deal with them (probably expose...) (TODO)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:72:5
   |
72 |     DefaultValue(Word),
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:73:5
   |
73 |     Silent,
   |     ^^^^^^

warning: missing documentation for a variant
  --> traits/src/error.rs:74:5
   |
74 |     FireException {
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/error.rs:75:9
   |
75 |         interrupt_vector_table_number: u8,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/error.rs:76:9
   |
76 |         payload: Option<Word>,
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a module
  --> traits/src/lib.rs:54:1
   |
54 | pub mod control;
   | ^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> traits/src/control/control.rs:21:1
   |
21 | pub const MAX_BREAKPOINTS: usize = 10;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> traits/src/control/control.rs:22:1
   |
22 | pub const MAX_MEMORY_WATCHPOINTS: usize = 10;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/control/control.rs:25:1
   |
25 | pub enum Event {
   | ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/control.rs:26:5
   |
26 |     Breakpoint { addr: Addr },
   |     ^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/control.rs:26:18
   |
26 |     Breakpoint { addr: Addr },
   |                  ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/control.rs:27:5
   |
27 |     MemoryWatch { addr: Addr, data: Word },
   |     ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/control.rs:27:19
   |
27 |     MemoryWatch { addr: Addr, data: Word },
   |                   ^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/control.rs:27:31
   |
27 |     MemoryWatch { addr: Addr, data: Word },
   |                               ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/control.rs:28:5
   |
28 |     Interrupted, // If we get paused or stepped, this is returned. (TODO: we currently only return this if we're paused!! not sure if stopping on a step is reasonable behavior)
   |     ^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/control.rs:29:5
   |
29 |     Halted,
   |     ^^^^^^

warning: missing documentation for an enum
  --> traits/src/control/control.rs:33:1
   |
33 | pub enum State {
   | ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/control.rs:34:5
   |
34 |     Paused,
   |     ^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/control.rs:35:5
   |
35 |     RunningUntilEvent,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/control.rs:36:5
   |
36 |     Halted,
   |     ^^^^^^

warning: missing documentation for a trait
  --> traits/src/control/control.rs:49:1
   |
49 | pub trait Control {
   | ^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
  --> traits/src/control/control.rs:50:5
   |
50 |     type EventFuture: Future<Output = Event>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:52:5
   |
52 |     fn get_pc(&self) -> Addr;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:53:5
   |
53 |     fn set_pc(&mut self, addr: Addr); // Should be infallible.
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:55:5
   |
55 |     fn get_register(&self, reg: Reg) -> Word;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:56:5
   |
56 |     fn set_register(&mut self, reg: Reg, data: Word); // Should be infallible.
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:58:5
   |
58 |     fn get_registers_psr_and_pc(&self) -> ([Word; Reg::NUM_REGS], Word, Word) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:69:5
   |
69 |     fn read_word(&self, addr: Addr) -> Word;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:70:5
   |
70 |     fn write_word(&mut self, addr: Addr, word: Word);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:72:5
   |
72 |     fn set_breakpoint(&mut self, addr: Addr) -> Result<usize, ()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:73:5
   |
73 |     fn unset_breakpoint(&mut self, idx: usize) -> Result<(), ()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:74:5
   |
74 |     fn get_breakpoints(&self) -> [Option<Addr>; MAX_BREAKPOINTS];
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:75:5
   |
75 |     fn get_max_breakpoints(&self) -> usize {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:79:5
   |
79 |     fn set_memory_watchpoint(&mut self, addr: Addr) -> Result<usize, ()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:80:5
   |
80 |     fn unset_memory_watchpoint(&mut self, idx: usize) -> Result<(), ()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:81:5
   |
81 |     fn get_memory_watchpoints(&self) -> [Option<(Addr, Word)>; MAX_MEMORY_WATCHPOINTS];
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:82:5
   |
82 |     fn get_max_memory_watchpoints(&self) -> usize {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/control.rs:87:5
   |
87 |     fn run_until_event(&mut self) -> Self::EventFuture; // Can be interrupted by step or pause.
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:104:5
    |
104 |     fn tick(&mut self) -> usize; // The function to call so that the simulator can do some work.
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:106:5
    |
106 |     fn step(&mut self) -> Option<Event>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:107:5
    |
107 |     fn pause(&mut self); // TODO: should we respond saying whether or not the pause actually did anything (i.e. if we were already paused... it did not).
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:109:5
    |
109 |     fn get_state(&self) -> State;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:111:5
    |
111 |     fn reset(&mut self);
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:117:5
    |
117 |     fn get_error(&self) -> Option<Error>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:121:5
    |
121 |     fn get_gpio_states(&self) -> GpioPinArr<GpioState>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:122:5
    |
122 |     fn get_gpio_readings(&self) -> GpioPinArr<Result<bool, GpioReadError>>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:123:5
    |
123 |     fn get_adc_states(&self) -> AdcPinArr<AdcState>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:124:5
    |
124 |     fn get_adc_readings(&self) -> AdcPinArr<Result<u8, AdcReadError>>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:125:5
    |
125 |     fn get_timer_states(&self) -> TimerArr<TimerState>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:126:5
    |
126 |     fn get_timer_config(&self) -> TimerArr<Word>; // TODO: represent with some kind of enum? Word is problematic since it leaks interpreter impl details.
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:127:5
    |
127 |     fn get_pwm_states(&self) -> PwmPinArr<PwmState>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:128:5
    |
128 |     fn get_pwm_config(&self) -> PwmPinArr<u8>; // TODO: ditto with using u8 here; probably should be some kind of enum (the conflict is then we're kinda pushing implementors to represent state a certain way.. or at least to have to translate it to our enum).
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:129:5
    |
129 |     fn get_clock(&self) -> Word;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:145:5
    |
145 |     fn get_info(&self) -> DeviceInfo {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/control.rs:155:5
    |
155 |     fn set_program_metadata(&mut self, metadata: ProgramMetadata);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/control/metadata.rs:22:1
   |
22 | pub enum ProgramId {
   | ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/metadata.rs:23:5
   |
23 |     Known { hash: u64 },
   |     ^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/metadata.rs:23:13
   |
23 |     Known { hash: u64 },
   |             ^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/metadata.rs:24:5
   |
24 |     Unknown,
   |     ^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:35:5
   |
35 |     pub /*const*/ fn new(program: &MemoryDump) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/control/metadata.rs:51:1
   |
51 | pub struct ProgramMetadata {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/metadata.rs:52:5
   |
52 |     pub id: ProgramId,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:58:5
   |
58 |     pub /*const*/ fn new(program: &MemoryDump, modified: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:65:5
   |
65 |     pub /*const*/ fn from<P: Into<MemoryDump>>(program: P, modified: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:69:5
   |
69 |     pub fn set_last_modified(&mut self, modified: Duration) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:80:9
   |
80 |         pub /*const*/ fn new_modified_now(program: &MemoryDump) -> Self {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:84:9
   |
84 |         pub /*const*/ fn from_modified_now<P: Into<MemoryDump>>(program: P) -> Self {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:88:9
   |
88 |         pub fn now(mut self) -> Self {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/metadata.rs:93:9
   |
93 |         pub fn updated_now(&mut self) {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/metadata.rs:100:9
    |
100 |         pub fn modified_on(&mut self, time: SystemTime) {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/metadata.rs:110:1
    |
110 | pub struct Identifier([u8; 4]);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/metadata.rs:113:5
    |
113 |     pub fn new(name: [u8; 4]) -> Result<Self, ()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/metadata.rs:123:5
    |
123 |     pub fn new_from_str(name: &str) -> Result<Self, ()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/metadata.rs:131:5
    |
131 |     pub const fn new_that_crashes_on_invalid_inputs(name: [u8; 4]) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/metadata.rs:144:5
    |
144 |     pub const fn new_from_str_that_crashes_on_invalid_inputs(name: &str) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/metadata.rs:181:1
    |
181 | pub struct Capabilities {
    | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/metadata.rs:182:5
    |
182 |     pub storage: bool,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/metadata.rs:183:5
    |
183 |     pub display: bool,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/metadata.rs:187:1
    |
187 | pub struct DeviceInfo {
    | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/metadata.rs:188:5
    |
188 |     pub current_program_metadata: ProgramMetadata,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/metadata.rs:189:5
    |
189 |     pub capabilities: Capabilities,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/metadata.rs:190:5
    |
190 |     pub source_type_id: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/metadata.rs:191:5
    |
191 |     pub source_name: Identifier,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/metadata.rs:192:5
    |
192 |     pub proxies: [Option<Identifier>; 5]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/metadata.rs:196:5
    |
196 |     pub fn new(metadata: ProgramMetadata, capabilities: Capabilities, type_id: TypeId, name: Identifier, proxies: [Option<Identifier>; 5]) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/metadata.rs:206:5
    |
206 |     pub fn add_proxy(mut self, proxy: Identifier) -> Result<Self, Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/control/metadata.rs:231:1
    |
231 | pub trait TypeIdExt: Hash {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/metadata.rs:232:5
    |
232 |     fn t(&self) -> u64;
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/control/metadata.rs:244:1
    |
244 | pub trait AnyExt: Any {
    | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/metadata.rs:245:5
    |
245 |     fn type_id_u64(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/control/snapshot.rs:14:1
   |
14 | pub enum SnapshotError {
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/snapshot.rs:15:5
   |
15 |     UnrecordableState,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/snapshot.rs:16:5
   |
16 |     UninterruptableState,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/snapshot.rs:17:5
   |
17 |     Other(&'static str),
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
  --> traits/src/control/snapshot.rs:35:1
   |
35 | pub trait Snapshot {
   | ^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
  --> traits/src/control/snapshot.rs:36:5
   |
36 |     type Snap;
   |     ^^^^^^^^^^

warning: missing documentation for an associated type
  --> traits/src/control/snapshot.rs:37:5
   |
37 |     type Err: Debug + Into<SnapshotError>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/snapshot.rs:41:5
   |
41 |     fn record(&self) -> Result<Self::Snap, Self::Err>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/snapshot.rs:45:5
   |
45 |     fn restore(&mut self, snap: Self::Snap) -> Result<(), Self::Err>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/control/rpc/messages.rs:45:1
   |
45 | pub enum RequestMessage { // messages for everything but tick()
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:46:5
   |
46 |     GetPc,
   |     ^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:47:5
   |
47 |     SetPc { addr: Addr },
   |     ^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:47:13
   |
47 |     SetPc { addr: Addr },
   |             ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:49:5
   |
49 |     GetRegister { reg: Reg },
   |     ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:49:19
   |
49 |     GetRegister { reg: Reg },
   |                   ^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:50:5
   |
50 |     SetRegister { reg: Reg, data: Word },
   |     ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:50:19
   |
50 |     SetRegister { reg: Reg, data: Word },
   |                   ^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:50:29
   |
50 |     SetRegister { reg: Reg, data: Word },
   |                             ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:54:5
   |
54 |     GetRegistersPsrAndPc,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:56:5
   |
56 |     ReadWord { addr: Addr },
   |     ^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:56:16
   |
56 |     ReadWord { addr: Addr },
   |                ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:57:5
   |
57 |     WriteWord { addr: Addr, word: Word },
   |     ^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:57:17
   |
57 |     WriteWord { addr: Addr, word: Word },
   |                 ^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:57:29
   |
57 |     WriteWord { addr: Addr, word: Word },
   |                             ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:59:5
   |
59 |     SetBreakpoint { addr: Addr },
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:59:21
   |
59 |     SetBreakpoint { addr: Addr },
   |                     ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:60:5
   |
60 |     UnsetBreakpoint { idx: usize },
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:60:23
   |
60 |     UnsetBreakpoint { idx: usize },
   |                       ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:61:5
   |
61 |     GetBreakpoints,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:62:5
   |
62 |     GetMaxBreakpoints,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:64:5
   |
64 |     SetMemoryWatchpoint { addr: Addr },
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:64:27
   |
64 |     SetMemoryWatchpoint { addr: Addr },
   |                           ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:65:5
   |
65 |     UnsetMemoryWatchpoint { idx: usize },
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:65:29
   |
65 |     UnsetMemoryWatchpoint { idx: usize },
   |                             ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:66:5
   |
66 |     GetMemoryWatchpoints,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:67:5
   |
67 |     GetMaxMemoryWatchpoints,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:70:5
   |
70 |     RunUntilEvent,
   |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:72:5
   |
72 |     Step,
   |     ^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:73:5
   |
73 |     Pause,
   |     ^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:75:5
   |
75 |     GetState,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:77:5
   |
77 |     Reset,
   |     ^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:79:5
   |
79 |     GetError,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:81:5
   |
81 |     GetGpioStates,
   |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:82:5
   |
82 |     GetGpioReadings,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:83:5
   |
83 |     GetAdcStates,
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:84:5
   |
84 |     GetAdcReadings,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:85:5
   |
85 |     GetTimerStates,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:86:5
   |
86 |     GetTimerConfig,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:87:5
   |
87 |     GetPwmStates,
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:88:5
   |
88 |     GetPwmConfig,
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:89:5
   |
89 |     GetClock,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:91:5
   |
91 |     GetInfo,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> traits/src/control/rpc/messages.rs:92:5
   |
92 |     SetProgramMetadata { metadata: ProgramMetadata },
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/messages.rs:92:26
   |
92 |     SetProgramMetadata { metadata: ProgramMetadata },
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
   --> traits/src/control/rpc/messages.rs:105:1
    |
105 | pub enum ResponseMessage { // messages for everything but tick()
    | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:106:5
    |
106 |     GetPc(Addr),
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:107:5
    |
107 |     SetPc,
    |     ^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:109:5
    |
109 |     GetRegister(Word),
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:110:5
    |
110 |     SetRegister,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:114:5
    |
114 |     GetRegistersPsrAndPc(([Word; Reg::NUM_REGS], Word, Word)),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:116:5
    |
116 |     ReadWord(Word),
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:117:5
    |
117 |     WriteWord,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:119:5
    |
119 |     SetBreakpoint(Result<usize, ()>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:120:5
    |
120 |     UnsetBreakpoint(Result<(), ()>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:121:5
    |
121 |     GetBreakpoints([Option<Addr>; MAX_BREAKPOINTS]),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:122:5
    |
122 |     GetMaxBreakpoints(usize),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:124:5
    |
124 |     SetMemoryWatchpoint(Result<usize, ()>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:125:5
    |
125 |     UnsetMemoryWatchpoint(Result<(), ()>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:126:5
    |
126 |     GetMemoryWatchpoints([Option<(Addr, Word)>; MAX_MEMORY_WATCHPOINTS]),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:127:5
    |
127 |     GetMaxMemoryWatchpoints(usize),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:130:5
    |
130 |     RunUntilEventAck, // Special acknowledge message for run until event.
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:131:5
    |
131 |     RunUntilEvent(Event),
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:133:5
    |
133 |     Step(Option<Event>),
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:134:5
    |
134 |     Pause,
    |     ^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:136:5
    |
136 |     GetState(State),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:137:5
    |
137 |     Reset,
    |     ^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:139:5
    |
139 |     GetError(Option<Lc3Error>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:141:5
    |
141 |     GetGpioStates(GpioPinArr<GpioState>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:142:5
    |
142 |     GetGpioReadings(GpioPinArr<Result<bool, GpioReadError>>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:143:5
    |
143 |     GetAdcStates(AdcPinArr<AdcState>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:144:5
    |
144 |     GetAdcReadings(AdcPinArr<Result<u8, AdcReadError>>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:145:5
    |
145 |     GetTimerStates(TimerArr<TimerState>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:146:5
    |
146 |     GetTimerConfig(TimerArr<Word>), // TODO
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:147:5
    |
147 |     GetPwmStates(PwmPinArr<PwmState>),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:148:5
    |
148 |     GetPwmConfig(PwmPinArr<u8>), // TODO
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:149:5
    |
149 |     GetClock(Word),
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:151:5
    |
151 |     GetInfo(DeviceInfo),
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/messages.rs:152:5
    |
152 |     SetProgramMetadata,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/control/rpc/encoding.rs:171:1
    |
171 | pub trait Encode<Message: Debug>: Default {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
   --> traits/src/control/rpc/encoding.rs:172:5
    |
172 |     type Encoded: Debug;
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/rpc/encoding.rs:174:5
    |
174 |     fn encode(message: Message) -> Self::Encoded;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/control/rpc/encoding.rs:182:1
    |
182 | pub trait Decode<Message: Debug>: Default {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
   --> traits/src/control/rpc/encoding.rs:183:5
    |
183 |     type Encoded: Debug;
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
   --> traits/src/control/rpc/encoding.rs:184:5
    |
184 |     type Err: Debug;
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/control/rpc/encoding.rs:186:5
    |
186 |     fn decode(encoded: &Self::Encoded) -> Result<Message, Self::Err>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/rpc/encoding.rs:193:1
    |
193 | pub struct CoreConvert<T>(PhantomData<T>);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/control/rpc/encoding.rs:236:1
    |
236 | / pub trait Encoding<Message: Debug>: Encode<Message> + Decode<Message>
237 | | where
238 | |     Self: Encode<Message, Encoded = <Self as Decode<Message>>::Encoded>,
239 | | {
...   |
262 | |     // }
263 | | }
    | |_^

warning: missing documentation for a struct
   --> traits/src/control/rpc/encoding.rs:282:1
    |
282 | pub struct Transparent<T: Debug>(PhantomData<T>);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/rpc/encoding.rs:322:1
    |
322 | / pub struct Pair<Message: Debug, Enc, Dec>(PhantomData<(Message, Enc, Dec)>)
323 | | where
324 | |     Enc: Encode<Message>,
325 | |     Dec: Decode<Message, Encoded = <Enc as Encode<Message>>::Encoded>;
    | |______________________________________________________________________^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:342:5
    |
342 |     pub /*const*/ fn with(_enc: Enc, _dec: Dec) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/rpc/encoding.rs:387:1
    |
387 | / pub struct ChainedEncode<A: Debug, B: Debug, Outer, Inner>(PhantomData<(A, B, Outer, Inner)>)
388 | | where
389 | |     Outer: Encode<A, Encoded = B>,
390 | |     Inner: Encode<B>;
    | |_____________________^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:407:5
    |
407 |     pub /*const*/ fn new_detached() -> Self { Default::default() }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:408:5
    |
408 |     pub /*const*/ fn new(_outer: Outer) -> Self { Self::new_detached() }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:416:5
    |
416 |     pub /*const*/ fn chain_back_detached<Z: Debug, NewOuter: Encode<Z, Encoded = A>>() -> ChainedEncode<Z, A, NewOuter, Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:420:5
    |
420 |     pub /*const*/ fn chain_back<Z: Debug, NewOuter: Encode<Z, Encoded = A>>(self, _new_outer: NewOuter) -> ChainedEncode<Z, A, NewOuter, Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:424:5
    |
424 |     pub fn chain_front_detatched<Z: Debug, NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>>() -> ChainedEncode<A, <Inner as Encode<B>>::Encoded, Self, NewInner> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:428:5
    |
428 |     pub fn chain_front<Z: Debug, NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>>(self, _new_inner: NewInner) -> ChainedEncode<A, <Inner as Encode<B>>::Encoded, Self, NewInner> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:433:5
    |
433 |     pub fn chain_detatched<Z: Debug, NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>>() -> ChainedEncode<A, <Inner as Encode<B>>::Encoded, Self, NewInner> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:438:5
    |
438 |     pub fn chain<Z: Debug, NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>>(self, _new_inner: NewInner) -> ChainedEncode<A, <Inner as Encode<B>>::Encoded, Self, NewInner> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/rpc/encoding.rs:470:1
    |
470 | / pub struct ChainedDecode<A: Debug, B: Debug, Outer, Inner>(PhantomData<(A, B, Outer, Inner)>)
471 | | where
472 | |     Inner: Decode<B>,
473 | |     Outer: Decode<A, Encoded = B>,
474 | |     <Inner as Decode<B>>::Err: Into<<Outer as Decode<A>>::Err>;
    | |_______________________________________________________________^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:496:5
    |
496 |     pub /*const*/ fn new_detached() -> Self { Default::default() }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:497:5
    |
497 |     pub /*const*/ fn new(_outer: Outer) -> Self { Self::new_detached() }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:507:5
    |
507 | /     pub /*const*/ fn chain_back_detached<Z: Debug, NewOuter: Decode<Z, Encoded = A>>() -> ChainedDecode<Z, A, NewOuter, Self>
508 | |     where
509 | |         <Outer as Decode<A>>::Err: Into<<NewOuter as Decode<Z>>::Err>
510 | |     {
511 | |         Default::default()
512 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:514:5
    |
514 | /     pub /*const*/ fn chain_back<Z: Debug, NewOuter: Decode<Z, Encoded = A>>(self, _new_outer: NewOuter) -> ChainedDecode<Z, A, NewOuter, Self>
515 | |     where
516 | |         <Outer as Decode<A>>::Err: Into<<NewOuter as Decode<Z>>::Err>
517 | |     {
518 | |         Self::chain_back_detached()
519 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:521:5
    |
521 | /     pub fn chain_front_detatched<Z: Debug, NewInner>() -> ChainedDecode<A, <Inner as Decode<B>>::Encoded, Self, NewInner>
522 | |     where
523 | |         NewInner: Decode<<Inner as Decode<B>>::Encoded, Encoded = Z>,
524 | |         <Outer as Decode<A>>::Err: From<<NewInner as Decode<<Inner as Decode<B>>::Encoded>>::Err>,
525 | |     {
526 | |         Default::default()
527 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:529:5
    |
529 | /     pub fn chain_front<Z: Debug, NewInner>(self, _new_inner: NewInner) -> ChainedDecode<A, <Inner as Decode<B>>::Encoded, Self, NewInner>
530 | |     where
531 | |         NewInner: Decode<<Inner as Decode<B>>::Encoded, Encoded = Z>,
532 | |         <Outer as Decode<A>>::Err: From<<NewInner as Decode<<Inner as Decode<B>>::Encoded>>::Err>,
533 | |     {
534 | |         Self::chain_front_detatched()
535 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:538:5
    |
538 | /     pub fn chain_detatched<Z: Debug, NewInner>() -> ChainedDecode<A, <Inner as Decode<B>>::Encoded, Self, NewInner>
539 | |     where
540 | |         NewInner: Decode<<Inner as Decode<B>>::Encoded, Encoded = Z>,
541 | |         <Outer as Decode<A>>::Err: From<<NewInner as Decode<<Inner as Decode<B>>::Encoded>>::Err>,
542 | |     {
543 | |         Self::chain_front_detatched()
544 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:547:5
    |
547 | /     pub fn chain<Z: Debug, NewInner>(self, _new_inner: NewInner) -> ChainedDecode<A, <Inner as Decode<B>>::Encoded, Self, NewInner>
548 | |     where
549 | |         NewInner: Decode<<Inner as Decode<B>>::Encoded, Encoded = Z>,
550 | |         <Outer as Decode<A>>::Err: From<<NewInner as Decode<<Inner as Decode<B>>::Encoded>>::Err>,
551 | |     {
552 | |         Self::chain_detatched()
553 | |     }
    | |_____^

warning: missing documentation for a struct
   --> traits/src/control/rpc/encoding.rs:595:1
    |
595 | / pub struct ChainedEncoding<A: Debug, B: Debug, Outer, Inner>(PhantomData<(A, Outer)>, PhantomData<(B, Inner)>)
596 | | where
597 | |     Inner: Encode<B>,
598 | |     Inner: Decode<B, Encoded = <Inner as Encode<B>>::Encoded>,
599 | |     Outer: Decode<A, Encoded = B> + Encode<A, Encoded = B>,
600 | |     <Inner as Decode<B>>::Err: Into<<Outer as Decode<A>>::Err>;
    | |_______________________________________________________________^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:673:5
    |
673 |     pub fn new_detached() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:677:5
    |
677 |     pub fn new(_outer: Outer) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:692:5
    |
692 | /     pub fn chain_back_detached<Z, NewOuter>() -> ChainedEncoding<Z, A, NewOuter, Self>
693 | |     where
694 | |         Z: Debug,
695 | |         NewOuter: Encode<Z, Encoded = A>,
...   |
700 | |         Default::default()
701 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:703:5
    |
703 | /     pub fn chain_back<Z, NewOuter>(self, _new_outer: NewOuter) -> ChainedEncoding<Z, A, NewOuter, Self>
704 | |     where
705 | |         Z: Debug,
706 | |         NewOuter: Encode<Z, Encoded = A>,
...   |
711 | |         Self::chain_back_detached()
712 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:714:5
    |
714 | /     pub fn chain_front_detatched<Z, NewInner>() -> ChainedEncoding<A, <Inner as Encode<B>>::Encoded, Self, NewInner>
715 | |     where
716 | |         Z: Debug,
717 | |         NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>,
...   |
722 | |         Default::default()
723 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:725:5
    |
725 | /     pub fn chain_front<Z, NewInner>(self, _new_inner: NewInner) -> ChainedEncoding<A, <Inner as Encode<B>>::Encoded, Self, NewInner>
726 | |     where
727 | |         Z: Debug,
728 | |         NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>,
...   |
733 | |         Self::chain_front_detatched()
734 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:737:5
    |
737 | /     pub fn chain_detatched<Z, NewInner>() -> ChainedEncoding<A, <Inner as Encode<B>>::Encoded, Self, NewInner>
738 | |     where
739 | |         Z: Debug,
740 | |         NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>,
...   |
745 | |         Self::chain_front_detatched()
746 | |     }
    | |_____^

warning: missing documentation for a method
   --> traits/src/control/rpc/encoding.rs:749:5
    |
749 | /     pub fn chain<Z, NewInner>(self, _new_inner: NewInner) -> ChainedEncoding<A, <Inner as Encode<B>>::Encoded, Self, NewInner>
750 | |     where
751 | |         Z: Debug,
752 | |         NewInner: Encode<<Inner as Encode<B>>::Encoded, Encoded = Z>,
...   |
757 | |         Self::chain_detatched()
758 | |     }
    | |_____^

warning: missing documentation for a trait
 --> traits/src/control/rpc/transport.rs:9:1
  |
9 | pub trait Transport<SendFormat, RecvFormat> {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
  --> traits/src/control/rpc/transport.rs:10:5
   |
10 |     type Err: Debug;
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> traits/src/control/rpc/transport.rs:11:5
   |
11 |     const ID: Identifier;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/control/rpc/transport.rs:13:5
   |
13 |     fn send(&self, message: SendFormat) -> Result<(), Self::Err>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/control/rpc/transport.rs:29:5
   |
29 |     pub struct MpscTransport<SendFormat: Debug, RecvFormat: Debug> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> traits/src/control/rpc/transport.rs:29:5
   |
29 | /     pub struct MpscTransport<SendFormat: Debug, RecvFormat: Debug> {
30 | |         tx: Sender<SendFormat>,
31 | |         rx: Receiver<RecvFormat>,
32 | |     }
   | |_____^
   |
note: the lint level is defined here
  --> traits/src/lib.rs:30:5
   |
30 |     missing_debug_implementations,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/rpc/transport.rs:79:9
   |
79 |         pub fn new() -> (MpscTransport<S, R>, MpscTransport<R, S>) {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/control/rpc/futures.rs:149:1
    |
149 | pub trait EventFutureSharedStatePorcelain: EventFutureSharedState {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
   --> traits/src/control/rpc/futures.rs:189:1
    |
189 | pub enum SharedStateState { // TODO: bad name, I know
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/futures.rs:190:5
    |
190 |     Errored,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/futures.rs:191:5
    |
191 |     Dormant,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/futures.rs:192:5
    |
192 |     WaitingForAnEvent { waker: Option<Waker>, count: NonZeroU8 },
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/rpc/futures.rs:192:25
    |
192 |     WaitingForAnEvent { waker: Option<Waker>, count: NonZeroU8 },
    |                         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/rpc/futures.rs:192:47
    |
192 |     WaitingForAnEvent { waker: Option<Waker>, count: NonZeroU8 },
    |                                               ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> traits/src/control/rpc/futures.rs:193:5
    |
193 |     WaitingForFuturesToResolve { event: Event, waker: Option<Waker>, count: NonZeroU8 },
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/rpc/futures.rs:193:34
    |
193 |     WaitingForFuturesToResolve { event: Event, waker: Option<Waker>, count: NonZeroU8 },
    |                                  ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/rpc/futures.rs:193:48
    |
193 |     WaitingForFuturesToResolve { event: Event, waker: Option<Waker>, count: NonZeroU8 },
    |                                                ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> traits/src/control/rpc/futures.rs:193:70
    |
193 |     WaitingForFuturesToResolve { event: Event, waker: Option<Waker>, count: NonZeroU8 },
    |                                                                      ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/rpc/futures.rs:313:1
    |
313 | pub struct SimpleEventFutureSharedState {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
   --> traits/src/control/rpc/futures.rs:313:1
    |
313 | / pub struct SimpleEventFutureSharedState {
314 | |     // waker: Cell<Option<Waker>>,
315 | |     // count: AtomicU8,
316 | |     // state: Cell<Option<(Event, State)>>,
317 | |     inner: Cell<SharedStateState>
318 | | }
    | |_^

warning: missing documentation for a method
   --> traits/src/control/rpc/futures.rs:321:5
    |
321 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/rpc/futures.rs:378:1
    |
378 | pub struct EventFuture<'a, S: EventFutureSharedState>(pub &'a S);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/futures.rs:381:5
    |
381 |     pub /*const*/ fn new(inner: &'a S) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/control/rpc/futures.rs:398:5
    |
398 |     pub struct SyncEventFutureSharedState(RwLock<SharedStateState>);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/futures.rs:403:9
    |
403 |         pub fn new() -> Self {
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/control/rpc/controller.rs:39:1
   |
39 | / pub struct Controller<
40 | |     'a,
41 | |     T,
42 | |     S,
...  |
64 | |     // waiting_for_event: bool,
65 | | }
   | |_^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/controller.rs:59:5
   |
59 |     pub transport: T,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/rpc/controller.rs:85:5
   |
85 |     pub /*const*/ fn new(_enc: E, _dec: D, transport: T, shared_state: &'a S) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/control/rpc/device.rs:28:1
   |
28 | / pub struct Device<
29 | |     T,
30 | |     C,
31 | |     Req = RequestMessage,
...  |
51 | |     pending_event_future: Option<C::EventFuture>,
52 | | }
   | |_^

warning: missing documentation for a struct field
  --> traits/src/control/rpc/device.rs:49:5
   |
49 |     pub transport: T,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> traits/src/control/rpc/device.rs:73:5
   |
73 |     pub /*const*/ fn new(_enc: E, _dec: D, transport: T) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/control/rpc/device.rs:252:5
    |
252 |     pub fn step(&mut self, c: &mut C) -> (usize, usize) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a function
   --> traits/src/control/rpc/mod.rs:78:1
    |
78  | / pub fn new_pair<
79  | |     'a,
80  | |     'b,
81  | |     Req: Debug,
...   |
140 | |     (controller, device)
141 | | }
    | |_^

warning: missing documentation for a function
   --> traits/src/control/rpc/mod.rs:148:5
    |
148 | /     pub fn mpsc_pair<
149 | |         'a,
150 | |         Req: Debug,
151 | |         Resp: Debug,
...   |
200 | |         new_pair(controller, state, device, None)
201 | |     }
    | |_____^

warning: missing documentation for a function
   --> traits/src/control/rpc/mod.rs:203:5
    |
203 | /     pub fn mpsc_sync_pair<
204 | |         'a,
205 | |         Req: Debug,
206 | |         Resp: Debug,
...   |
252 | |         mpsc_pair(state)
253 | |     }
    | |_____^

warning: missing documentation for a trait
 --> traits/src/memory.rs:9:1
  |
9 | pub trait Memory: Index<Addr, Output = Word> + IndexMut<Addr, Output = Word> {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/memory.rs:10:5
   |
10 |     fn read_word(&self, addr: Addr) -> Word {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/memory.rs:14:5
   |
14 |     fn write_word(&mut self, addr: Addr, word: Word) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/memory.rs:18:5
   |
18 |     fn get_program_metadata(&self) -> ProgramMetadata;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/memory.rs:19:5
   |
19 |     fn set_program_metadata(&mut self, metadata: ProgramMetadata);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/memory.rs:23:1
   |
23 | pub struct MemoryStub(Word);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/adc.rs:15:1
   |
15 | pub enum AdcPin { A0, A1, A2, A3, A4, A5 }
   | ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:15:19
   |
15 | pub enum AdcPin { A0, A1, A2, A3, A4, A5 }
   |                   ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:15:23
   |
15 | pub enum AdcPin { A0, A1, A2, A3, A4, A5 }
   |                       ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:15:27
   |
15 | pub enum AdcPin { A0, A1, A2, A3, A4, A5 }
   |                           ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:15:31
   |
15 | pub enum AdcPin { A0, A1, A2, A3, A4, A5 }
   |                               ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:15:35
   |
15 | pub enum AdcPin { A0, A1, A2, A3, A4, A5 }
   |                                   ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:15:39
   |
15 | pub enum AdcPin { A0, A1, A2, A3, A4, A5 }
   |                                       ^^

warning: missing documentation for an associated constant
  --> traits/src/peripherals/adc.rs:18:5
   |
18 |     pub const NUM_PINS: usize = 6;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> traits/src/peripherals/adc.rs:21:1
   |
21 | pub const ADC_PINS: AdcPinArr<AdcPin> = {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/adc.rs:27:1
   |
27 | pub enum AdcState {
   | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:28:5
   |
28 |     Enabled,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/adc.rs:29:5
   |
29 |     Disabled,
   |     ^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/adc.rs:47:1
   |
47 | pub struct AdcPinArr<T>(pub [T; AdcPin::NUM_PINS]);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/adc.rs:82:5
   |
82 |     fn set_state(&mut self, pin: AdcPin, state: AdcState) -> Result<(), ()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/adc.rs:83:5
   |
83 |     fn get_state(&self, pin: AdcPin) -> AdcState;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/adc.rs:84:5
   |
84 |     fn get_states(&self) -> AdcPinArr<AdcState> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/adc.rs:94:5
   |
94 |     fn read(&self, pin: AdcPin) -> Result<u8, AdcReadError>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/adc.rs:95:5
   |
95 |     fn read_all(&self) -> AdcPinArr<Result<u8, AdcReadError>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/adc.rs:109:1
    |
109 | pub struct AdcMiscError;
    | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> traits/src/peripherals/adc.rs:111:1
    |
111 | pub type AdcStateMismatch = (AdcPin, AdcState);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/adc.rs:114:1
    |
114 | pub struct AdcReadError(pub AdcStateMismatch);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/peripherals/mod.rs:201:9
    |
201 |           pub trait $trait $(<$lifetime>)? where Self: $($bound)? { $($rest)* }
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
   ::: traits/src/peripherals/clock.rs:17:1
    |
17  | / peripheral_trait! {clock,
18  | | pub trait Clock: Default {
19  | |     fn get_milliseconds(&self) -> Word;
20  | |
21  | |     fn set_milliseconds(&mut self, ms: Word);
22  | | }}
    | |__- in this macro invocation

warning: missing documentation for a trait method
  --> traits/src/peripherals/clock.rs:19:5
   |
19 |     fn get_milliseconds(&self) -> Word;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/clock.rs:21:5
   |
21 |     fn set_milliseconds(&mut self, ms: Word);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/gpio.rs:28:1
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   | ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:20
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                    ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:24
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                        ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:28
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                            ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:32
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                                ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:36
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                                    ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:40
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                                        ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:44
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                                            ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:28:48
   |
28 | pub enum GpioPin { G0, G1, G2, G3, G4, G5, G6, G7 }
   |                                                ^^

warning: missing documentation for an associated constant
  --> traits/src/peripherals/gpio.rs:31:5
   |
31 |     pub const NUM_PINS: usize = 8; // G0 - G7; TODO: derive macro (also get it to impl Display)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> traits/src/peripherals/gpio.rs:34:1
   |
34 | pub const GPIO_PINS: GpioPinArr<GpioPin> = {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/gpio.rs:58:1
   |
58 | pub enum GpioState {
   | ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:59:5
   |
59 |     Input,
   |     ^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:60:5
   |
60 |     Output,
   |     ^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:61:5
   |
61 |     Interrupt, // TBD: Can you call read on a pin configured for interrupts? (TODO)
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/gpio.rs:68:5
   |
68 |     Disabled,
   |     ^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/gpio.rs:72:1
   |
72 | pub struct GpioPinArr<T>(pub [T; GpioPin::NUM_PINS]);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/gpio.rs:113:1
    |
113 | pub struct GpioMiscError;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/gpio.rs:118:1
    |
118 | pub struct GpioReadError(pub GpioStateMismatch);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/gpio.rs:121:1
    |
121 | pub struct GpioWriteError(pub GpioStateMismatch);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> traits/src/peripherals/gpio.rs:123:1
    |
123 | pub type GpioStateMismatches = GpioPinArr<Option<GpioStateMismatch>>; // [Option<GpioStateMismatch>; NUM_GPIO_PINS as usize];
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/gpio.rs:126:1
    |
126 | pub struct GpioReadErrors(pub GpioStateMismatches);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/gpio.rs:129:1
    |
129 | pub struct GpioWriteErrors(pub GpioStateMismatches);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:213:5
    |
213 |     fn set_state(&mut self, pin: GpioPin, state: GpioState) -> Result<(), GpioMiscError>; // should probably be infallible
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:214:5
    |
214 |     fn get_state(&self, pin: GpioPin) -> GpioState;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:215:5
    |
215 |     fn get_states(&self) -> GpioPinArr<GpioState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:225:5
    |
225 |     fn read(&self, pin: GpioPin) -> Result<bool, GpioReadError>; // errors on state mismatch (i.e. you tried to read but the pin is configured as an output)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:226:5
    |
226 |     fn read_all(&self) -> GpioPinArr<Result<bool, GpioReadError>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:241:5
    |
241 |     fn write(&mut self, pin: GpioPin, bit: bool) -> Result<(), GpioWriteError>; // errors on state mismatch
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:242:5
    |
242 |     fn write_all(&mut self, bits: GpioPinArr<bool>) -> GpioPinArr<Result<(), GpioWriteError>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:260:5
    |
260 |     fn register_interrupt_flags(&mut self, flags: &'a GpioPinArr<AtomicBool>);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:261:5
    |
261 |     fn interrupt_occurred(&self, pin: GpioPin) -> bool;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:262:5
    |
262 |     fn reset_interrupt_flag(&mut self, pin: GpioPin);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/gpio.rs:263:5
    |
263 |     fn interrupts_enabled(&self, pin: GpioPin) -> bool;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/pwm.rs:16:1
   |
16 | pub enum PwmPin { P0, P1 }
   | ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/pwm.rs:16:19
   |
16 | pub enum PwmPin { P0, P1 }
   |                   ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/pwm.rs:16:23
   |
16 | pub enum PwmPin { P0, P1 }
   |                       ^^

warning: missing documentation for an associated constant
  --> traits/src/peripherals/pwm.rs:20:5
   |
20 |     pub const NUM_PINS: usize = 2; // P0 - P1
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> traits/src/peripherals/pwm.rs:33:1
   |
33 | pub const PWM_PINS: PwmPinArr<PwmPin> = {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/pwm.rs:39:1
   |
39 | pub enum PwmState {
   | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/pwm.rs:40:5
   |
40 |     Enabled(NonZeroU8),
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/pwm.rs:41:5
   |
41 |     Disabled,
   |     ^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/pwm.rs:45:1
   |
45 | pub struct PwmPinArr<T>(pub [T; PwmPin::NUM_PINS]);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/pwm.rs:78:1
   |
78 | pub struct PwmSetPeriodError(pub PwmPin); // TODO: review
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/pwm.rs:81:1
   |
81 | pub struct PwmSetDutyError(pub PwmPin); // TODO: review
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/peripherals/mod.rs:201:9
    |
201 |           pub trait $trait $(<$lifetime>)? where Self: $($bound)? { $($rest)* }
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
   ::: traits/src/peripherals/pwm.rs:83:1
    |
83  | / peripheral_trait! {pwm,
84  | | pub trait Pwm: Default {
85  | |     fn set_state(&mut self, pin: PwmPin, state: PwmState) -> Result<(), PwmSetPeriodError>;
86  | |     fn get_state(&self, pin: PwmPin) -> PwmState;
...   |
109 | |     }
110 | | }}
    | |__- in this macro invocation

warning: missing documentation for a trait method
  --> traits/src/peripherals/pwm.rs:85:5
   |
85 |     fn set_state(&mut self, pin: PwmPin, state: PwmState) -> Result<(), PwmSetPeriodError>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/pwm.rs:86:5
   |
86 |     fn get_state(&self, pin: PwmPin) -> PwmState;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/pwm.rs:87:5
   |
87 |     fn get_states(&self) -> PwmPinArr<PwmState> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/pwm.rs:96:5
   |
96 |     fn get_pin(&self, pin: PwmPin) -> bool; // TODO: should perhaps not be infallible (actually why does this even exist?)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/pwm.rs:97:5
   |
97 |     fn set_duty_cycle(&mut self, pin: PwmPin, duty: u8) -> Result<(), PwmSetDutyError>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/pwm.rs:100:5
    |
100 |     fn get_duty_cycle(&self, pin: PwmPin) -> u8; // This is u8 because u16 fractions seem excessive.
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/pwm.rs:101:5
    |
101 |     fn get_duty_cycles(&self) -> PwmPinArr<u8> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/timers.rs:19:1
   |
19 | pub enum TimerId { T0, T1, }
   | ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/timers.rs:19:20
   |
19 | pub enum TimerId { T0, T1, }
   |                    ^^

warning: missing documentation for a variant
  --> traits/src/peripherals/timers.rs:19:24
   |
19 | pub enum TimerId { T0, T1, }
   |                        ^^

warning: missing documentation for an associated constant
  --> traits/src/peripherals/timers.rs:22:5
   |
22 |     pub const NUM_TIMERS: usize = 2;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a constant
  --> traits/src/peripherals/timers.rs:35:1
   |
35 | pub const TIMERS: TimerArr<TimerId> = {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/timers.rs:41:1
   |
41 | pub struct TimerArr<T>(pub [T; TimerId::NUM_TIMERS]);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> traits/src/peripherals/timers.rs:73:1
   |
73 | pub enum TimerState {
   | ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/timers.rs:74:5
   |
74 |     Repeated,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/timers.rs:75:5
   |
75 |     SingleShot,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> traits/src/peripherals/timers.rs:76:5
   |
76 |     Disabled,
   |     ^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/timers.rs:80:1
   |
80 | pub struct TimerMiscError;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> traits/src/peripherals/timers.rs:82:1
   |
82 | pub type TimerStateMismatch = (TimerId, TimerState);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/peripherals/mod.rs:201:9
    |
201 |           pub trait $trait $(<$lifetime>)? where Self: $($bound)? { $($rest)* }
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
   ::: traits/src/peripherals/timers.rs:84:1
    |
84  | / peripheral_trait! {timers,
85  | | pub trait Timers<'a>: Default {
86  | |     fn set_state(&mut self, timer: TimerId, state: TimerState) -> Result<(), TimerMiscError>;  // Should this be infallible (TODO)
87  | |     fn get_state(&self, timer: TimerId) -> TimerState;
...   |
116 | |
117 | | }}
    | |__- in this macro invocation

warning: missing documentation for a trait method
  --> traits/src/peripherals/timers.rs:86:5
   |
86 |     fn set_state(&mut self, timer: TimerId, state: TimerState) -> Result<(), TimerMiscError>;  // Should this be infallible (TODO)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/timers.rs:87:5
   |
87 |     fn get_state(&self, timer: TimerId) -> TimerState;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/timers.rs:88:5
   |
88 |     fn get_states(&self) -> TimerArr<TimerState> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/timers.rs:100:5
    |
100 |     fn set_period(&mut self, timer: TimerId, ms: Word) -> Result<(), TimerMiscError>;  // Should this be infallible (TODO)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/timers.rs:101:5
    |
101 |     fn get_period(&self, timer: TimerId) -> Word; // should be fallible? (i.e. what happens when we're disabled?)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/timers.rs:102:5
    |
102 |     fn get_periods(&self) -> TimerArr<Word> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/timers.rs:112:5
    |
112 |     fn register_interrupt_flags(&mut self, flags: &'a TimerArr<AtomicBool>);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/timers.rs:113:5
    |
113 |     fn interrupt_occurred(&self, timer: TimerId) -> bool;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/timers.rs:114:5
    |
114 |     fn reset_interrupt_flag(&mut self, timer: TimerId);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> traits/src/peripherals/timers.rs:115:5
    |
115 |     fn interrupts_enabled(&self, timer: TimerId) -> bool;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/peripherals/mod.rs:201:9
    |
201 |           pub trait $trait $(<$lifetime>)? where Self: $($bound)? { $($rest)* }
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
   ::: traits/src/peripherals/input.rs:8:1
    |
8   | / peripheral_trait! {input,
9   | | pub trait Input<'a>: Default {
10  | |     // Warning! This is stateful!! It marks the current data as read.
11  | |     //
...   |
26  | |     fn interrupts_enabled(&self) -> bool;
27  | | }}
    | |__- in this macro invocation

warning: missing documentation for a trait method
  --> traits/src/peripherals/input.rs:19:5
   |
19 |     fn read_data(&self) -> Result<u8, InputError>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/input.rs:20:5
   |
20 |     fn current_data_unread(&self) -> bool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/input.rs:22:5
   |
22 |     fn register_interrupt_flag(&mut self, flag: &'a AtomicBool);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/input.rs:23:5
   |
23 |     fn interrupt_occurred(&self) -> bool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/input.rs:25:5
   |
25 |     fn set_interrupt_enable_bit(&mut self, bit: bool);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/input.rs:26:5
   |
26 |     fn interrupts_enabled(&self) -> bool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/input.rs:30:1
   |
30 | pub struct InputError;
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
   --> traits/src/peripherals/mod.rs:201:9
    |
201 |           pub trait $trait $(<$lifetime>)? where Self: $($bound)? { $($rest)* }
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
   ::: traits/src/peripherals/output.rs:8:1
    |
8   | / peripheral_trait! {output,
9   | | pub trait Output<'a>: Default {
10  | |     fn write_data(&mut self, c: u8) -> Result<(), OutputError>;
11  | |
...   |
21  | |     fn interrupts_enabled(&self) -> bool;
22  | | }}
    | |__- in this macro invocation

warning: missing documentation for a trait method
  --> traits/src/peripherals/output.rs:10:5
   |
10 |     fn write_data(&mut self, c: u8) -> Result<(), OutputError>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/output.rs:15:5
   |
15 |     fn current_data_written(&self) -> bool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/output.rs:17:5
   |
17 |     fn register_interrupt_flag(&mut self, flag: &'a AtomicBool);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/output.rs:18:5
   |
18 |     fn interrupt_occurred(&self) -> bool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/output.rs:20:5
   |
20 |     fn set_interrupt_enable_bit(&mut self, bit: bool);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> traits/src/peripherals/output.rs:21:5
   |
21 |     fn interrupts_enabled(&self) -> bool;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/output.rs:25:1
   |
25 | pub struct OutputError;
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> traits/src/peripherals/stubs.rs:8:1
   |
8  | / pub type PeripheralsStub<'s> = PeripheralSet<
9  | |     's,
10 | |     GpioStub,
11 | |     AdcStub,
...  |
16 | |     OutputStub,
17 | | >;
   | |__^

warning: missing documentation for a struct
  --> traits/src/peripherals/stubs.rs:21:1
   |
21 | pub struct GpioStub;
   | ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/stubs.rs:38:1
   |
38 | pub struct AdcStub;
   | ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/stubs.rs:49:1
   |
49 | pub struct PwmStub;
   | ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/stubs.rs:63:1
   |
63 | pub struct TimersStub;
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/stubs.rs:80:1
   |
80 | pub struct ClockStub;
   | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/stubs.rs:88:1
   |
88 | pub struct InputStub;
   | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> traits/src/peripherals/stubs.rs:103:1
    |
103 | pub struct OutputStub;
    | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
  --> traits/src/peripherals/mod.rs:36:1
   |
36 | / pub trait Peripherals<'int>:
37 | |     Gpio<'int> + Adc + Pwm + Timers<'int> + Clock + Input<'int> + Output<'int>
38 | | {
39 | |     fn init(&mut self);
40 | | }
   | |_^

warning: missing documentation for a trait method
  --> traits/src/peripherals/mod.rs:39:5
   |
39 |     fn init(&mut self);
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> traits/src/peripherals/mod.rs:42:1
   |
42 | / pub struct PeripheralSet<'int, G, A, P, T, C, I, O/*, GW, AW, PW, TW, CW, IW, OW*/>
43 | | where
44 | |     G: Gpio<'int>,
45 | |     A: Adc,
...  |
73 | |     _marker: PhantomData<&'int ()>,
74 | | }
   | |_^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> traits/src/peripherals/mod.rs:42:1
   |
42 | / pub struct PeripheralSet<'int, G, A, P, T, C, I, O/*, GW, AW, PW, TW, CW, IW, OW*/>
43 | | where
44 | |     G: Gpio<'int>,
45 | |     A: Adc,
...  |
73 | |     _marker: PhantomData<&'int ()>,
74 | | }
   | |_^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:120:5
    |
120 |     pub fn new(gpio: G, adc: A, pwm: P, timers: T, clock: C, input: I, output: O) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:133:5
    |
133 |     pub fn get_gpio(&self) -> &G {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:137:5
    |
137 |     pub fn get_adc(&self) -> &A {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:141:5
    |
141 |     pub fn get_pwm(&self) -> &P {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:145:5
    |
145 |     pub fn get_timers(&self) -> &T {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:149:5
    |
149 |     pub fn get_clock(&self) -> &C {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:153:5
    |
153 |     pub fn get_input(&self) -> &I {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> traits/src/peripherals/mod.rs:157:5
    |
157 |     pub fn get_output(&self) -> &O {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused result
   --> traits/src/control/rpc/futures.rs:426:17
    |
426 |                 s.increment();
    |                 ^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> traits/src/lib.rs:39:5
    |
39  |     unused_results,
    |     ^^^^^^^^^^^^^^

warning: unused result
   --> traits/src/control/rpc/controller.rs:205:9
    |
205 |         self.shared_state.add_new_future().expect("no new futures once a batch starts to resolve");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: lint `legacy_directory_ownership` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/37872`
  --> shims/src/lib.rs:11:5
   |
11 |     legacy_directory_ownership,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `plugin_as_library` has been removed: `plugins have been deprecated and retired`
  --> shims/src/lib.rs:17:5
   |
17 |     plugin_as_library,
   |     ^^^^^^^^^^^^^^^^^

warning: lint `safe_extern_statics` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/36247`
  --> shims/src/lib.rs:19:5
   |
19 |     safe_extern_statics,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `AdcMiscError`
  --> shims/src/peripherals/adc.rs:2:10
   |
2  |     Adc, AdcMiscError, AdcPin as Pin, AdcPinArr as PinArr, AdcReadError as ReadError, AdcState,
   |          ^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> shims/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `std::sync::mpsc`
 --> shims/src/peripherals/pwm.rs:5:5
  |
5 | use std::sync::mpsc;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> shims/src/peripherals/pwm.rs:6:5
  |
6 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::sync::Mutex`
 --> shims/src/peripherals/pwm.rs:7:5
  |
7 | use std::sync::Mutex;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `PwmState::*`
  --> shims/src/peripherals/pwm.rs:47:13
   |
47 |         use PwmState::*;
   |             ^^^^^^^^^^^

warning: unused import: `TimerStateMismatch`
 --> shims/src/peripherals/timers.rs:2:52
  |
2 |     TimerArr, TimerId, TimerMiscError, TimerState, TimerStateMismatch, Timers,
  |                                                    ^^^^^^^^^^^^^^^^^^

warning: unused import: `time`
  --> shims/src/peripherals/timers.rs:12:5
   |
12 | use time;
   |     ^^^^

warning: unused import: `Error as IoError`
 --> shims/src/peripherals/output.rs:2:23
  |
2 | use std::io::{stdout, Error as IoError, Write};
  |                       ^^^^^^^^^^^^^^^^

warning: unused import: `std::convert::AsMut`
 --> shims/src/peripherals/output.rs:6:5
  |
6 | use std::convert::AsMut;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::marker::PhantomData`
 --> shims/src/peripherals/output.rs:7:5
  |
7 | use std::marker::PhantomData;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ops::Deref`
 --> shims/src/peripherals/output.rs:8:5
  |
8 | use std::ops::Deref;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `std::ops::DerefMut`
 --> shims/src/peripherals/output.rs:9:5
  |
9 | use std::ops::DerefMut;
  |     ^^^^^^^^^^^^^^^^^^

warning: `extern crate` is not idiomatic in the new edition
  --> shims/src/peripherals/pwm.rs:11:1
   |
11 | extern crate time;
   | ^^^^^^^^^^^^^^^^^^ help: convert it to a `use`
   |
note: the lint level is defined here
  --> shims/src/lib.rs:40:5
   |
40 |     rust_2018_idioms
   |     ^^^^^^^^^^^^^^^^
   = note: `#[warn(unused_extern_crates)]` implied by `#[warn(rust_2018_idioms)]`

warning: `extern crate` is not idiomatic in the new edition
  --> shims/src/peripherals/pwm.rs:12:1
   |
12 | extern crate timer;
   | ^^^^^^^^^^^^^^^^^^^ help: convert it to a `use`

warning[E0170]: pattern binding `SingleShot` is named the same as one of the variants of the type `lc3_traits::peripherals::timers::TimerState`
   --> shims/src/peripherals/timers.rs:172:13
    |
172 |             SingleShot => true,
    |             ^^^^^^^^^^ help: to match on the variant, qualify the path: `lc3_traits::peripherals::timers::TimerState::SingleShot`
    |
    = note: `#[warn(bindings_with_variant_name)]` on by default

warning[E0170]: pattern binding `Disabled` is named the same as one of the variants of the type `lc3_traits::peripherals::timers::TimerState`
   --> shims/src/peripherals/timers.rs:174:13
    |
174 |             Disabled => false,
    |             ^^^^^^^^ help: to match on the variant, qualify the path: `lc3_traits::peripherals::timers::TimerState::Disabled`

warning: unreachable pattern
   --> shims/src/peripherals/timers.rs:173:13
    |
172 |             SingleShot => true,
    |             ---------- matches any value
173 |             Repeating => true,
    |             ^^^^^^^^^ unreachable pattern
    |
note: the lint level is defined here
   --> shims/src/lib.rs:21:5
    |
21  |     unused,
    |     ^^^^^^
    = note: `#[warn(unreachable_patterns)]` implied by `#[warn(unused)]`

warning: unreachable pattern
   --> shims/src/peripherals/timers.rs:174:13
    |
172 |             SingleShot => true,
    |             ---------- matches any value
173 |             Repeating => true,
174 |             Disabled => false,
    |             ^^^^^^^^ unreachable pattern

warning: unused variable: `timer`
  --> shims/src/peripherals/timers.rs:77:30
   |
77 |     fn set_period(&mut self, timer: TimerId, milliseconds: Word) -> Result<(), TimerMiscError> {
   |                              ^^^^^ help: consider prefixing with an underscore: `_timer`
   |
note: the lint level is defined here
  --> shims/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

warning: unused variable: `milliseconds`
  --> shims/src/peripherals/timers.rs:77:46
   |
77 |     fn set_period(&mut self, timer: TimerId, milliseconds: Word) -> Result<(), TimerMiscError> {
   |                                              ^^^^^^^^^^^^ help: consider prefixing with an underscore: `_milliseconds`

warning: unused variable: `SingleShot`
   --> shims/src/peripherals/timers.rs:172:13
    |
172 |             SingleShot => true,
    |             ^^^^^^^^^^ help: consider prefixing with an underscore: `_SingleShot`

warning: unused variable: `Repeating`
   --> shims/src/peripherals/timers.rs:173:13
    |
173 |             Repeating => true,
    |             ^^^^^^^^^ help: consider prefixing with an underscore: `_Repeating`

warning: unused variable: `Disabled`
   --> shims/src/peripherals/timers.rs:174:13
    |
174 |             Disabled => false,
    |             ^^^^^^^^ help: consider prefixing with an underscore: `_Disabled`

warning: method is never used: `new`
  --> shims/src/peripherals/input.rs:90:5
   |
90 |     fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> shims/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`

warning: missing documentation for a module
  --> shims/src/memory/mod.rs:4:1
   |
4  | pub mod error;
   | ^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> shims/src/lib.rs:32:5
   |
32 |     missing_docs,
   |     ^^^^^^^^^^^^

warning: missing documentation for an enum
 --> shims/src/memory/error.rs:4:1
  |
4 | pub enum MemoryShimError {
  | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
 --> shims/src/memory/error.rs:5:5
  |
5 |     IoError(IoError),
  |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
 --> shims/src/memory/error.rs:6:5
  |
6 |     IncorrectlySizedFile(u64),
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> shims/src/memory/file_backed.rs:20:1
   |
20 | pub struct FileBackedMemoryShim {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/memory/file_backed.rs:20:1
   |
20 | / pub struct FileBackedMemoryShim {
21 | |     path: PathBuf,
22 | |     memory: [Word; ADDR_SPACE_SIZE_IN_WORDS],
23 | |     metadata: ProgramMetadata,
24 | | }
   | |_^
   |
note: the lint level is defined here
  --> shims/src/lib.rs:30:5
   |
30 |     missing_debug_implementations,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/memory/file_backed.rs:33:5
   |
33 | /     pub fn with_initialized_memory<P: AsRef<Path>>(
34 | |         path: P,
35 | |         memory: MemoryDump,
36 | |     ) -> Self {
...  |
41 | |         }
42 | |     }
   | |_____^

warning: missing documentation for a method
  --> shims/src/memory/file_backed.rs:44:5
   |
44 |     pub fn from_existing_file<P: AsRef<Path>>(path: &P) -> Result<Self, MemoryShimError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/memory/file_backed.rs:54:5
   |
54 |     pub fn new<P: AsRef<Path>>(path: P) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/memory/file_backed.rs:58:5
   |
58 |     pub fn flush(&mut self) -> Result<(), MemoryShimError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/memory/file_backed.rs:65:5
   |
65 |     pub fn change_file<P: AsRef<Path>>(&mut self, path: P) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/memory/simple.rs:20:1
   |
20 | / pub struct MemoryShim {
21 | |     mem: [Word; ADDR_SPACE_SIZE_IN_WORDS],
22 | |     metadata: ProgramMetadata,
23 | | }
   | |_^

warning: missing documentation for a method
  --> shims/src/memory/simple.rs:35:5
   |
35 |     pub fn new(mem: [Word; ADDR_SPACE_SIZE_IN_WORDS]) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/memory/simple.rs:46:5
   |
46 |     pub fn from_file<P: AsRef<Path>>(path: P) -> Result<Self, MemoryShimError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/memory/simple.rs:56:5
   |
56 |     pub fn to_file<P: AsRef<Path>>(&mut self, path: P) -> Result<(), MemoryShimError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
 --> shims/src/peripherals/adc.rs:7:1
  |
7 | pub struct AdcShim {
  | ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/adc.rs:41:5
   |
41 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/adc.rs:45:5
   |
45 |     pub fn set_value(&mut self, pin: Pin, value: u8) -> Result<(), SetError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
 --> shims/src/peripherals/clock.rs:8:1
  |
8 | pub struct ClockShim {
  | ^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/peripherals/gpio.rs:42:1
   |
42 | / pub struct GpioShim<'a> {
43 | |     states: GpioPinArr<State>,
44 | |     flags: Option<&'a GpioPinArr<AtomicBool>>,
45 | | }
   | |_^

warning: missing documentation for a method
  --> shims/src/peripherals/gpio.rs:71:5
   |
71 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/gpio.rs:75:5
   |
75 |     pub fn new_shared() -> Arc<RwLock<Self>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> shims/src/peripherals/pwm.rs:20:1
   |
20 | pub struct PwmShim {
   | ^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/peripherals/pwm.rs:20:1
   |
20 | / pub struct PwmShim {
21 | |     states: PwmPinArr<PwmState>,
22 | |     duty_cycle: PwmPinArr<u8>,
23 | |     guards: PwmPinArr<Option<timer::Guard>>,
24 | | }
   | |_^

warning: missing documentation for a method
  --> shims/src/peripherals/pwm.rs:39:5
   |
39 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/pwm.rs:42:5
   |
42 |     pub fn get_pin_state(&self, pin: PwmPin) -> PwmState {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/pwm.rs:46:5
   |
46 |     pub fn set_duty_cycle_helper(&mut self, pin: PwmPin, period: NonZeroU8) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> shims/src/peripherals/timers.rs:17:1
   |
17 | pub struct TimersShim<'a> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/peripherals/timers.rs:17:1
   |
17 | / pub struct TimersShim<'a> {
18 | |     states: TimerArr<TimerState>,
19 | |     times: TimerArr<Word>,
20 | |     flags: Option<&'a TimerArr<AtomicBool>>,
21 | |     guards: TimerArr<Option<timer::Guard>>,
22 | | }
   | |_^

warning: missing documentation for a method
  --> shims/src/peripherals/timers.rs:36:5
   |
36 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> shims/src/peripherals/input.rs:26:1
   |
26 | pub struct SourceShim {
   | ^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/peripherals/input.rs:26:1
   |
26 | / pub struct SourceShim {
27 | |     last_char: Mutex<Option<u8>>,
28 | | }
   | |_^

warning: missing documentation for a method
  --> shims/src/peripherals/input.rs:31:5
   |
31 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/input.rs:34:5
   |
34 |     pub fn push(&self, c: char) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> shims/src/peripherals/input.rs:60:1
   |
60 | pub struct InputShim<'i, 'int> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/peripherals/input.rs:60:1
   |
60 | / pub struct InputShim<'i, 'int> {
61 | |     source: OwnedOrRef<'i, dyn Source + Send + Sync + 'i>,
62 | |     flag: Option<&'int AtomicBool>,
63 | |     interrupt_enable_bit: bool,
64 | |     data: Cell<Option<u8>>,
65 | | }
   | |_^

warning: missing documentation for a method
   --> shims/src/peripherals/input.rs:103:5
    |
103 |     pub fn using(source: Box<dyn Source + Send + Sync + 'i>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> shims/src/peripherals/input.rs:107:5
    |
107 |     pub fn with_ref(source: &'i (dyn Source + Send + Sync + 'i)) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
  --> shims/src/peripherals/output.rs:16:1
   |
16 | pub trait Sink {
   | ^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> shims/src/peripherals/output.rs:17:5
   |
17 |     fn put_char(&self, c: u8) -> IoResult<usize>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> shims/src/peripherals/output.rs:18:5
   |
18 |     fn flush(&self) -> IoResult<()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> shims/src/peripherals/output.rs:34:1
   |
34 | pub struct OutputShim<'o, 'int> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> shims/src/peripherals/output.rs:34:1
   |
34 | / pub struct OutputShim<'o, 'int> {
35 | |     sink: OwnedOrRef<'o, dyn Sink + Send + Sync + 'o>,
36 | |     flag: Option<&'int AtomicBool>,
37 | |     interrupt_enable_bit: bool,
38 | | }
   | |_^

warning: missing documentation for a method
  --> shims/src/peripherals/output.rs:47:5
   |
47 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/output.rs:51:5
   |
51 |     pub fn using(sink: Box<dyn Sink + Send + Sync + 'o>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> shims/src/peripherals/output.rs:59:5
   |
59 |     pub fn with_ref(sink: &'o (dyn Sink + Send + Sync + 'o)) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> shims/src/peripherals/mod.rs:26:1
   |
26 | / pub type PeripheralsShim<'s> = PeripheralSet<
27 | |     's,
28 | |     GpioShim<'s>,
29 | |     AdcShim,
...  |
34 | |     OutputShim<'s, 's>,
35 | | >;
   | |__^

warning: missing documentation for an enum
  --> shims/src/peripherals/mod.rs:38:1
   |
38 | pub enum OwnedOrRefMut<'a, R: ?Sized> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> shims/src/peripherals/mod.rs:39:5
   |
39 |     Owned(Box<R>),
   |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> shims/src/peripherals/mod.rs:40:5
   |
40 |     Ref(&'a mut R),
   |     ^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> shims/src/peripherals/mod.rs:68:1
   |
68 | pub enum OwnedOrRef<'a, R: ?Sized> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> shims/src/peripherals/mod.rs:69:5
   |
69 |     Owned(Box<R>),
   |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> shims/src/peripherals/mod.rs:70:5
   |
70 |     Ref(&'a R),
   |     ^^^^^^^^^^

warning: variable `SingleShot` should have a snake case name
   --> shims/src/peripherals/timers.rs:172:13
    |
172 |             SingleShot => true,
    |             ^^^^^^^^^^ help: convert the identifier to snake case: `single_shot`
    |
note: the lint level is defined here
   --> shims/src/lib.rs:7:5
    |
7   |     bad_style,
    |     ^^^^^^^^^
    = note: `#[warn(non_snake_case)]` implied by `#[warn(bad_style)]`

warning: variable `Repeating` should have a snake case name
   --> shims/src/peripherals/timers.rs:173:13
    |
173 |             Repeating => true,
    |             ^^^^^^^^^ help: convert the identifier to snake case: `repeating`

warning: variable `Disabled` should have a snake case name
   --> shims/src/peripherals/timers.rs:174:13
    |
174 |             Disabled => false,
    |             ^^^^^^^^ help: convert the identifier to snake case: `disabled`

warning: unused result
  --> shims/src/peripherals/input.rs:37:13
   |
37 |             last_char.replace(c as u8);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> shims/src/lib.rs:39:5
   |
39 |     unused_results,
   |     ^^^^^^^^^^^^^^

warning: unused result
   --> shims/src/peripherals/input.rs:114:13
    |
114 |             self.data.replace(Some(c));
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused result
  --> shims/src/peripherals/output.rs:96:9
   |
96 |         self.sink.put_char(c).map_err(|_| OutputError)?;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: lint `legacy_directory_ownership` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/37872`
  --> baseline-sim/src/lib.rs:13:5
   |
13 |     legacy_directory_ownership,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `plugin_as_library` has been removed: `plugins have been deprecated and retired`
  --> baseline-sim/src/lib.rs:19:5
   |
19 |     plugin_as_library,
   |     ^^^^^^^^^^^^^^^^^

warning: lint `safe_extern_statics` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/36247`
  --> baseline-sim/src/lib.rs:21:5
   |
21 |     safe_extern_statics,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused macro definition
   --> baseline-sim/src/mem_mapped.rs:738:1
    |
738 | / macro_rules! timer_mem_mapped {
739 | |     ($id:expr, $id_name:literal, $cr:ident, $dr:ident, $addr:expr) => {
740 | |         #[doc=$id_name]
741 | |         #[doc="Timer Control Register"] // TODO: format correctly
...   |
828 | |     };
829 | | }
    | |_^
    |
note: the lint level is defined here
   --> baseline-sim/src/lib.rs:23:5
    |
23  |     unused,
    |     ^^^^^^
    = note: `#[warn(unused_macros)]` implied by `#[warn(unused)]`

warning: trivial numeric cast: `u16` as `u16`
   --> baseline-sim/src/interp.rs:763:25
    |
763 | /                         {
764 | |                             let mut _rhs_add;
765 | |                             _insn_inner!(_rhs_add | $d ($d rest)*);
766 | |                             _rhs_add
767 | |                         } as Word);
    | |_________________________________^
...
792 |               AddReg { dr, sr1, sr2 } => I!(dr <- R[sr1] + R[sr2]),
    |                                          ------------------------- in this macro invocation
    |
note: the lint level is defined here
   --> baseline-sim/src/lib.rs:37:5
    |
37  |     trivial_numeric_casts,
    |     ^^^^^^^^^^^^^^^^^^^^^
    = help: cast can be replaced by coercion; this might require a temporary variable

warning: trivial numeric cast: `u16` as `u16`
   --> baseline-sim/src/interp.rs:770:43
    |
770 |                           $d nom = $d nom & {
    |  ___________________________________________^
771 | |                             let mut _rhs_and;
772 | |                             _insn_inner!(_rhs_and | $d ($d rest)*);
773 | |                             _rhs_and
774 | |                         } as Word;
    | |_________________________________^
...
794 |               AndReg { dr, sr1, sr2 } => I!(dr <- R[sr1] & R[sr2]),
    |                                          ------------------------- in this macro invocation
    |
    = help: cast can be replaced by coercion; this might require a temporary variable

warning: trivial numeric cast: `u16` as `u16`
   --> baseline-sim/src/mem_mapped.rs:367:29
    |
367 |         Ok(Self::with_value(0 as Word))
    |                             ^^^^^^^^^
    |
    = help: cast can be replaced by coercion; this might require a temporary variable

warning: unused import: `InstructionInterpreter`
  --> baseline-sim/src/mem_mapped.rs:8:26
   |
8  | use crate::interp::{Acv, InstructionInterpreter, WriteAttempt};
   |                          ^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> baseline-sim/src/lib.rs:23:5
   |
23 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused variable: `interp`
   --> baseline-sim/src/mem_mapped.rs:242:19
    |
242 |     fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                   ^^^^^^ help: consider prefixing with an underscore: `_interp`
    |
note: the lint level is defined here
   --> baseline-sim/src/lib.rs:23:5
    |
23  |     unused,
    |     ^^^^^^
    = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

warning: unused variable: `value`
   --> baseline-sim/src/mem_mapped.rs:242:35
    |
242 |     fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                                   ^^^^^ help: consider prefixing with an underscore: `_value`

warning: unused variable: `interp`
   --> baseline-sim/src/mem_mapped.rs:362:20
    |
362 |     fn from<'a, I>(interp: &I) -> Result<Self, Acv>
    |                    ^^^^^^ help: consider prefixing with an underscore: `_interp`

warning: unused variable: `interp`
   --> baseline-sim/src/mem_mapped.rs:582:27
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                           ^^^^^^ help: consider prefixing with an underscore: `_interp`
...
595 | adc_mem_mapped!(A0, "A0", A0CR, A0DR, 0xFE17);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `value`
   --> baseline-sim/src/mem_mapped.rs:582:43
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                                           ^^^^^ help: consider prefixing with an underscore: `_value`
...
595 | adc_mem_mapped!(A0, "A0", A0CR, A0DR, 0xFE17);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `interp`
   --> baseline-sim/src/mem_mapped.rs:582:27
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                           ^^^^^^ help: consider prefixing with an underscore: `_interp`
...
596 | adc_mem_mapped!(A1, "A1", A1CR, A1DR, 0xFE19);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `value`
   --> baseline-sim/src/mem_mapped.rs:582:43
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                                           ^^^^^ help: consider prefixing with an underscore: `_value`
...
596 | adc_mem_mapped!(A1, "A1", A1CR, A1DR, 0xFE19);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `interp`
   --> baseline-sim/src/mem_mapped.rs:582:27
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                           ^^^^^^ help: consider prefixing with an underscore: `_interp`
...
597 | adc_mem_mapped!(A2, "A2", A2CR, A2DR, 0xFE1B);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `value`
   --> baseline-sim/src/mem_mapped.rs:582:43
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                                           ^^^^^ help: consider prefixing with an underscore: `_value`
...
597 | adc_mem_mapped!(A2, "A2", A2CR, A2DR, 0xFE1B);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `interp`
   --> baseline-sim/src/mem_mapped.rs:582:27
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                           ^^^^^^ help: consider prefixing with an underscore: `_interp`
...
598 | adc_mem_mapped!(A3, "A3", A3CR, A3DR, 0xFE1D);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `value`
   --> baseline-sim/src/mem_mapped.rs:582:43
    |
582 |             fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
    |                                           ^^^^^ help: consider prefixing with an underscore: `_value`
...
598 | adc_mem_mapped!(A3, "A3", A3CR, A3DR, 0xFE1D);
    | ---------------------------------------------- in this macro invocation

warning: unused variable: `e`
   --> baseline-sim/src/sim.rs:240:29
    |
240 |                 if let Some(e) = self.step() {
    |                             ^ help: consider prefixing with an underscore: `_e`

warning: method is never used: `handle_interrupt`
   --> baseline-sim/src/interp.rs:659:5
    |
659 |     fn handle_interrupt(&mut self, int_vec: u8, priority: u8) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> baseline-sim/src/lib.rs:23:5
    |
23  |     unused,
    |     ^^^^^^
    = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`

warning: missing documentation for a trait
  --> baseline-sim/src/interp.rs:27:1
   |
27 | / pub trait InstructionInterpreterPeripheralAccess<'a>:
28 | |     InstructionInterpreter + Deref + DerefMut
29 | | where
30 | |     <Self as Deref>::Target: Peripherals<'a>,
...  |
62 | |     }
63 | | }
   | |_^
   |
note: the lint level is defined here
  --> baseline-sim/src/lib.rs:34:5
   |
34 |     missing_docs,
   |     ^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:32:5
   |
32 |     fn get_peripherals(&self) -> &<Self as Deref>::Target {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:36:5
   |
36 |     fn get_peripherals_mut(&mut self) -> &mut <Self as Deref>::Target {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:40:5
   |
40 |     fn get_device_reg<M: MemMapped>(&self) -> Result<M, Acv> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:44:5
   |
44 |     fn set_device_reg<M: MemMapped>(&mut self, value: Word) -> WriteAttempt {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:48:5
   |
48 |     fn update_device_reg<M: MemMapped>(&mut self, func: impl FnOnce(M) -> Word) -> WriteAttempt {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:52:5
   |
52 |     fn get_special_reg<M: MemMappedSpecial>(&self) -> M {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:56:5
   |
56 |     fn set_special_reg<M: MemMappedSpecial>(&mut self, value: Word) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:60:5
   |
60 |     fn update_special_reg<M: MemMappedSpecial>(&mut self, func: impl FnOnce(M) -> Word) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
  --> baseline-sim/src/interp.rs:65:1
   |
65 | / pub trait InstructionInterpreter:
66 | |     Index<Reg, Output = Word> + IndexMut<Reg, Output = Word> + Sized
67 | | {
68 | |     const ID: Identifier = Identifier::new_from_str_that_crashes_on_invalid_inputs("Insn");
...  |
97 | |     fn type_id() -> TypeId { core::any::TypeId::of::<Instruction>() }
98 | | }
   | |_^

warning: missing documentation for an associated constant
  --> baseline-sim/src/interp.rs:68:5
   |
68 |     const ID: Identifier = Identifier::new_from_str_that_crashes_on_invalid_inputs("Insn");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:70:5
   |
70 |     fn step(&mut self) -> MachineState;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:72:5
   |
72 |     fn set_pc(&mut self, addr: Addr);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:73:5
   |
73 |     fn get_pc(&self) -> Addr;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:76:5
   |
76 |     fn set_word(&mut self, addr: Addr, word: Word) -> WriteAttempt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:77:5
   |
77 |     fn get_word(&self, addr: Addr) -> ReadAttempt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:79:5
   |
79 |     fn set_word_unchecked(&mut self, addr: Addr, word: Word);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:80:5
   |
80 |     fn get_word_unchecked(&self, addr: Addr) -> Word;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:82:5
   |
82 |     fn set_word_force_memory_backed(&mut self, addr: Addr, word: Word);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:83:5
   |
83 |     fn get_word_force_memory_backed(&self, addr: Addr) -> Word;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:85:5
   |
85 |     fn get_register(&self, reg: Reg) -> Word { self[reg] }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:86:5
   |
86 |     fn set_register(&mut self, reg: Reg, word: Word) { self[reg] = word; }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:88:5
   |
88 |     fn get_machine_state(&self) -> MachineState;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:89:5
   |
89 |     fn reset(&mut self);
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:90:5
   |
90 |     fn halt(&mut self); // TODO: have the MCR set this, etc.
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:93:5
   |
93 |     fn get_program_metadata(&self) -> ProgramMetadata;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:94:5
   |
94 |     fn set_program_metadata(&mut self, metadata: ProgramMetadata);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/interp.rs:97:5
   |
97 |     fn type_id() -> TypeId { core::any::TypeId::of::<Instruction>() }
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> baseline-sim/src/interp.rs:101:1
    |
101 | pub struct Acv;
    | ^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> baseline-sim/src/interp.rs:103:1
    |
103 | pub type ReadAttempt = Result<Word, Acv>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> baseline-sim/src/interp.rs:105:1
    |
105 | pub type WriteAttempt = Result<(), Acv>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
   --> baseline-sim/src/interp.rs:108:1
    |
108 | pub enum MachineState {
    | ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> baseline-sim/src/interp.rs:109:5
    |
109 |     Running,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> baseline-sim/src/interp.rs:110:5
    |
110 |     Halted,
    |     ^^^^^^

warning: missing documentation for a struct
   --> baseline-sim/src/interp.rs:126:1
    |
126 | pub struct PeripheralInterruptFlags {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:138:5
    |
138 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
   --> baseline-sim/src/interp.rs:164:1
    |
164 | pub enum OwnedOrRef<'a, T> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> baseline-sim/src/interp.rs:165:5
    |
165 |     Owned(T),
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> baseline-sim/src/interp.rs:166:5
    |
166 |     Ref(&'a T),
    |     ^^^^^^^^^^

warning: missing documentation for a struct
   --> baseline-sim/src/interp.rs:201:1
    |
201 | pub struct Interpreter<'a, M: Memory, P: Peripherals<'a>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> baseline-sim/src/interp.rs:221:1
    |
221 | pub struct Set;
    | ^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> baseline-sim/src/interp.rs:223:1
    |
223 | pub struct NotSet;
    | ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> baseline-sim/src/interp.rs:239:1
    |
239 | / pub struct InterpreterBuilder<
240 | |     'a,
241 | |     M: Memory,
242 | |     P,
...   |
258 | |     _state: PhantomData<&'a State>,
259 | | }
    | |_^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:283:5
    |
283 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:308:5
    |
308 |     pub fn with_defaults(self) -> InterpreterBuilder<'a, M, P, Set, Set, Set, Set, Set, Set> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:326:5
    |
326 | /     pub fn with_memory(
327 | |         self,
328 | |         memory: M,
329 | |     ) -> InterpreterBuilder<'a, M, P, Set, Perip, Flags, Regs, Pc, State> {
...   |
333 | |         })
334 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:343:5
    |
343 | /     pub fn with_default_memory(
344 | |         self,
345 | |     ) -> InterpreterBuilder<'a, M, P, Set, Perip, Flags, Regs, Pc, State> {
346 | |         self.with_memory(Default::default())
347 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:356:5
    |
356 | /     pub fn with_peripherals(
357 | |         self,
358 | |         peripherals: P,
359 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Set, Flags, Regs, Pc, State> {
...   |
363 | |         })
364 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:366:5
    |
366 | /     pub fn with_default_peripherals(
367 | |         self,
368 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Set, Flags, Regs, Pc, State> {
369 | |         self.with_peripherals(Default::default())
370 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:379:5
    |
379 | /     pub fn with_interrupt_flags_by_ref(
380 | |         self,
381 | |         flags: &'a PeripheralInterruptFlags,
382 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Set, Regs, Pc, State> {
...   |
386 | |         })
387 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:389:5
    |
389 | /     pub fn with_owned_interrupt_flags(
390 | |         self,
391 | |         flags: PeripheralInterruptFlags,
392 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Set, Regs, Pc, State> {
...   |
396 | |         })
397 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:399:5
    |
399 | /     pub fn with_default_interrupt_flags(
400 | |         self,
401 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Set, Regs, Pc, State> {
402 | |         self.with_owned_interrupt_flags(Default::default())
403 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:413:5
    |
413 | /     pub fn with_regs(
414 | |         self,
415 | |         regs: [Word; Reg::NUM_REGS],
416 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Flags, Set, Pc, State> {
...   |
420 | |         })
421 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:423:5
    |
423 | /     pub fn with_default_regs(
424 | |         self,
425 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Flags, Set, Pc, State> {
426 | |         self.with_regs(Default::default())
427 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:437:5
    |
437 | /     pub fn with_pc(
438 | |         self,
439 | |         pc: Word,
440 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Flags, Regs, Set, State> {
...   |
444 | |         })
445 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:447:5
    |
447 | /     pub fn with_default_pc(
448 | |         self,
449 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Flags, Regs, Set, State> {
450 | |         self.with_pc(Default::default())
451 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:461:5
    |
461 | /     pub fn with_state(
462 | |         self,
463 | |         state: MachineState,
464 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Flags, Regs, Pc, Set> {
...   |
468 | |         })
469 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:471:5
    |
471 | /     pub fn with_default_state(
472 | |         self,
473 | |     ) -> InterpreterBuilder<'a, M, P, Mem, Perip, Flags, Regs, Pc, Set> {
474 | |         self.with_state(Default::default())
475 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:482:5
    |
482 |     pub fn build(self) -> Interpreter<'a, M, P> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:495:5
    |
495 | /     pub fn new(
496 | |         memory: M,
497 | |         peripherals: P,
498 | |         flags: OwnedOrRef<'a, PeripheralInterruptFlags>,
...   |
516 | |         interp
517 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/interp.rs:553:5
    |
553 |     pub fn init(&mut self, flags: &'a PeripheralInterruptFlags) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait
  --> baseline-sim/src/mem_mapped.rs:10:1
   |
10 | pub trait MemMapped: Deref<Target = Word> + Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> baseline-sim/src/mem_mapped.rs:11:5
   |
11 |     const ADDR: Addr;
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> baseline-sim/src/mem_mapped.rs:12:5
   |
12 |     const HAS_STATEFUL_READS: bool = false;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/mem_mapped.rs:14:5
   |
14 |     fn with_value(value: Word) -> Self;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/mem_mapped.rs:16:5
   |
16 | /     fn from<'a, I>(interp: &I) -> Result<Self, Acv>
17 | |     where
18 | |         I: InstructionInterpreterPeripheralAccess<'a>,
19 | |         <I as Deref>::Target: Peripherals<'a>,
...  |
22 | |         Ok(Self::with_value(interp.get_word(Self::ADDR)?))
23 | |     }
   | |_____^

warning: missing documentation for a trait method
  --> baseline-sim/src/mem_mapped.rs:25:5
   |
25 | /     fn set<'a, I>(interp: &mut I, value: Word) -> WriteAttempt
26 | |     where
27 | |         I: InstructionInterpreterPeripheralAccess<'a>,
28 | |         <I as Deref>::Target: Peripherals<'a>,
...  |
31 | |         interp.set_word(Self::ADDR, value)
32 | |     }
   | |_____^

warning: missing documentation for a trait method
  --> baseline-sim/src/mem_mapped.rs:34:5
   |
34 | /     fn update<'a, I>(interp: &mut I, func: impl FnOnce(Self) -> Word) -> WriteAttempt
35 | |     where
36 | |         I: InstructionInterpreterPeripheralAccess<'a>,
37 | |         <I as Deref>::Target: Peripherals<'a>,
38 | |     {
39 | |         Self::set(interp, func(Self::from(interp)?))
40 | |     }
   | |_____^

warning: missing documentation for a trait
  --> baseline-sim/src/mem_mapped.rs:56:1
   |
56 | pub trait MemMappedSpecial: MemMapped {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/mem_mapped.rs:58:5
   |
58 | /     fn from_special<'a, I>(interp: &I) -> Self
59 | |     where
60 | |         I: InstructionInterpreterPeripheralAccess<'a>,
61 | |         <I as Deref>::Target: Peripherals<'a>,
62 | |     {
63 | |         Self::from(interp).unwrap()
64 | |     }
   | |_____^

warning: missing documentation for a trait method
  --> baseline-sim/src/mem_mapped.rs:67:5
   |
67 | /     fn set_special<'a, I>(interp: &mut I, value: Word)
68 | |     where
69 | |         I: InstructionInterpreterPeripheralAccess<'a>,
70 | |         <I as Deref>::Target: Peripherals<'a>,
71 | |     {
72 | |         Self::set(interp, value).unwrap()
73 | |     }
   | |_____^

warning: missing documentation for a trait
  --> baseline-sim/src/mem_mapped.rs:76:1
   |
76 | pub trait Interrupt: MemMapped {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> baseline-sim/src/mem_mapped.rs:77:5
   |
77 |     const INT_VEC: u8;
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> baseline-sim/src/mem_mapped.rs:78:5
   |
78 |     const PRIORITY: u8; // Must be a 3 bit number
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> baseline-sim/src/mem_mapped.rs:94:5
   |
94 |     fn priority() -> u8 {
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> baseline-sim/src/mem_mapped.rs:146:9
    |
146 |         pub struct $name(Word);
    |         ^^^^^^^^^^^^^^^^^^^^^^^
...
831 | mem_mapped!(special: BSP, 0xFFFA, "Backup Stack Pointer.");
    | ----------------------------------------------------------- in this macro invocation

warning: missing documentation for a struct
   --> baseline-sim/src/mem_mapped.rs:146:9
    |
146 |         pub struct $name(Word);
    |         ^^^^^^^^^^^^^^^^^^^^^^^
...
833 | mem_mapped!(special: PSR, PSR_ADDRESS, "Program Status Register.");
    | ------------------------------------------------------------------- in this macro invocation

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:836:5
    |
836 |     pub fn get_priority(&self) -> u8 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:840:5
    |
840 | /     pub fn set_priority<'a, I>(&mut self, interp: &mut I, priority: u8)
841 | |     where
842 | |         I: InstructionInterpreterPeripheralAccess<'a>,
843 | |         <I as Deref>::Target: Peripherals<'a>,
...   |
848 | |         self.write_current_value(interp).unwrap();
849 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:851:5
    |
851 |     pub fn in_user_mode(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:854:5
    |
854 |     pub fn in_privileged_mode(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:869:5
    |
869 | /     pub fn to_user_mode<'a, I>(&mut self, interp: &mut I)
870 | |     where
871 | |         I: InstructionInterpreterPeripheralAccess<'a>,
872 | |         <I as Deref>::Target: Peripherals<'a>,
873 | |     {
874 | |         self.set_mode(interp, true)
875 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:877:5
    |
877 | /     pub fn to_privileged_mode<'a, I>(&mut self, interp: &mut I)
878 | |     where
879 | |         I: InstructionInterpreterPeripheralAccess<'a>,
880 | |         <I as Deref>::Target: Peripherals<'a>,
881 | |     {
882 | |         self.set_mode(interp, false)
883 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:885:5
    |
885 |     pub fn n(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:888:5
    |
888 |     pub fn z(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:891:5
    |
891 |     pub fn p(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:894:5
    |
894 |     pub fn get_cc(&self) -> (bool, bool, bool) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:898:5
    |
898 | /     pub fn set_cc<'a, I>(&mut self, interp: &mut I, word: Word)
899 | |     where
900 | |         I: InstructionInterpreterPeripheralAccess<'a>,
901 | |         <I as Deref>::Target: Peripherals<'a>,
...   |
923 | |         self.write_current_value(interp).unwrap();
924 | |     }
    | |_____^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:985:5
    |
985 |     pub fn is_running(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> baseline-sim/src/mem_mapped.rs:989:5
    |
989 | /     pub fn halt<'a, I>(&mut self, interp: &mut I)
990 | |     where
991 | |         I: InstructionInterpreterPeripheralAccess<'a>,
992 | |         <I as Deref>::Target: Peripherals<'a>,
993 | |     {
994 | |         self.set_running_bit(interp, false);
995 | |     }
    | |_____^

warning: missing documentation for a method
    --> baseline-sim/src/mem_mapped.rs:997:5
     |
997  | /     pub fn run<'a, I>(&mut self, interp: &mut I)
998  | |     where
999  | |         I: InstructionInterpreterPeripheralAccess<'a>,
1000 | |         <I as Deref>::Target: Peripherals<'a>,
1001 | |     {
1002 | |         self.set_running_bit(interp, true);
1003 | |     }
     | |_____^

warning: missing documentation for a struct
  --> baseline-sim/src/sim.rs:27:1
   |
27 | / pub struct Simulator<'int, 'ss, I: InstructionInterpreter + InstructionInterpreterPeripheralAccess<'int>, S: EventFutureSharedStatePorcelain = SimpleEventFutureSharedState>
28 | | where
29 | |     <I as Deref>::Target: Peripherals<'int>,
30 | | {
...  |
38 | |     _i: PhantomData<&'int ()>,
39 | | }
   | |_^

warning: missing documentation for a method
  --> baseline-sim/src/sim.rs:68:5
   |
68 |     pub fn new_with_state(interp: I, state: &'s S) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> baseline-sim/src/sim.rs:75:5
   |
75 |     pub fn set_shared_state(&mut self, state: &'s S) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a module
  --> baseline-sim/src/lib.rs:57:1
   |
57 | pub mod test_infrastructure;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:375:9
    |
375 |         Output::write_data(interp.get_peripherals_mut(), value as u8);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> baseline-sim/src/lib.rs:23:5
    |
23  |     unused,
    |     ^^^^^^
    = note: `#[warn(unused_must_use)]` implied by `#[warn(unused)]`
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
477 | gpio_mem_mapped!(G0, "G0", G0CR, G0DR, 0xFE07);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
478 | gpio_mem_mapped!(G1, "G1", G1CR, G1DR, 0xFE09);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
479 | gpio_mem_mapped!(G2, "G2", G2CR, G2DR, 0xFE0B);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
480 | gpio_mem_mapped!(G3, "G3", G3CR, G3DR, 0xFE0D);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
481 | gpio_mem_mapped!(G4, "G4", G4CR, G4DR, 0xFE0F);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
482 | gpio_mem_mapped!(G5, "G5", G5CR, G5DR, 0xFE11);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
483 | gpio_mem_mapped!(G6, "G6", G6CR, G6DR, 0xFE13);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:467:17
    |
467 |                 Gpio::write(interp.get_peripherals_mut(), $pin, bit); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
484 | gpio_mem_mapped!(G7, "G7", G7CR, G7DR, 0xFE15);
    | ----------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:725:17
    |
725 |                 Pwm::set_duty_cycle(interp.get_peripherals_mut(), $pin, duty_val); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
735 | pwm_mem_mapped!(P0, "P0", P0CR, P0DR, 0xFE20);
    | ---------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/mem_mapped.rs:725:17
    |
725 |                 Pwm::set_duty_cycle(interp.get_peripherals_mut(), $pin, duty_val); // TODO: do something on failure
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
736 | pwm_mem_mapped!(P1, "P1", P1CR, P1DR, 0xFE22);
    | ---------------------------------------------- in this macro invocation
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused result
   --> baseline-sim/src/sim.rs:213:9
    |
213 |         s.add_new_future().expect("no new futures once a batch starts to resolve");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> baseline-sim/src/lib.rs:41:5
    |
41  |     unused_results,
    |     ^^^^^^^^^^^^^^

warning: unused result
   --> baseline-sim/src/sim.rs:233:21
    |
233 |                     self.step();
    |                     ^^^^^^^^^^^^

warning: unused `std::result::Result` that must be used
   --> baseline-sim/src/sim.rs:369:17
    |
369 |                 self.shared_state.as_ref().expect("unreachable; must have a shared state to call a run_until_event and therefore be in `RunningUntilEvent`").resolve_all(Event::Interrupted);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: lint `legacy_directory_ownership` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/37872`
  --> application-support/src/lib.rs:11:5
   |
11 |     legacy_directory_ownership,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `plugin_as_library` has been removed: `plugins have been deprecated and retired`
  --> application-support/src/lib.rs:17:5
   |
17 |     plugin_as_library,
   |     ^^^^^^^^^^^^^^^^^

warning: lint `safe_extern_statics` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/36247`
  --> application-support/src/lib.rs:19:5
   |
19 |     safe_extern_statics,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `BlackBox`, `Init`
  --> application-support/src/init/board.rs:3:13
   |
3  | use super::{BlackBox, Init};
   |             ^^^^^^^^  ^^^^
   |
note: the lint level is defined here
  --> application-support/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `crate::shim_support::Shims`
 --> application-support/src/init/board.rs:4:5
  |
4 | use crate::shim_support::Shims;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `BlackBox`, `Init`
 --> application-support/src/init/websocket.rs:3:13
  |
3 | use super::{BlackBox, Init};
  |             ^^^^^^^^  ^^^^

warning: unused import: `crate::shim_support::Shims`
 --> application-support/src/init/websocket.rs:4:5
  |
4 | use crate::shim_support::Shims;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `input`
  --> application-support/src/init/sim.rs:56:5
   |
56 |     input: Option<SourceShim>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> application-support/src/lib.rs:21:5
   |
21 |     unused,
   |     ^^^^^^
   = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`

warning: field is never read: `output`
  --> application-support/src/init/sim.rs:57:5
   |
57 |     output: Option<Mutex<Vec<u8>>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> application-support/src/shim_support.rs:11:1
   |
11 | pub struct Shims<'int> {
   | ^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> application-support/src/lib.rs:32:5
   |
32 |     missing_docs,
   |     ^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> application-support/src/shim_support.rs:11:1
   |
11 | / pub struct Shims<'int> {
12 | |     pub gpio: Arc<RwLock<GpioShim<'int>>>,
13 | |     pub adc: Arc<RwLock<AdcShim>>,
14 | |     pub pwm: Arc<RwLock<PwmShim>>,
15 | |     pub timers: Arc<RwLock<TimersShim<'int>>>,
16 | |     pub clock: Arc<RwLock<ClockShim>>,
17 | | }
   | |_^
   |
note: the lint level is defined here
  --> application-support/src/lib.rs:30:5
   |
30 |     missing_debug_implementations,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/shim_support.rs:12:5
   |
12 |     pub gpio: Arc<RwLock<GpioShim<'int>>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/shim_support.rs:13:5
   |
13 |     pub adc: Arc<RwLock<AdcShim>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/shim_support.rs:14:5
   |
14 |     pub pwm: Arc<RwLock<PwmShim>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/shim_support.rs:15:5
   |
15 |     pub timers: Arc<RwLock<TimersShim<'int>>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/shim_support.rs:16:5
   |
16 |     pub clock: Arc<RwLock<ClockShim>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
  --> application-support/src/shim_support.rs:19:1
   |
19 | / pub type ShimPeripheralSet<'int: 'io, 'io> = PeripheralSet<
20 | |     'int,
21 | |     Arc<RwLock<GpioShim<'int>>>,
22 | |     Arc<RwLock<AdcShim>>,
...  |
27 | |     Arc<Mutex<OutputShim<'io, 'int>>>,
28 | | >;
   | |__^

warning: missing documentation for a function
  --> application-support/src/shim_support.rs:30:1
   |
30 | / pub fn new_shim_peripherals_set<'int: 'io, 'io, I, O>(input: &'io I, output: &'io O)
31 | |         -> (ShimPeripheralSet<'int, 'io>, &'io impl InputSink, &'io impl OutputSource)
32 | | where
33 | |     I: InputSink + Source + Send + Sync + 'io,
...  |
48 | |     )
49 | | }
   | |_^

warning: missing documentation for a method
  --> application-support/src/shim_support.rs:52:5
   |
52 | /     pub fn from_peripheral_set<'io>(p: &ShimPeripheralSet<'int, 'io>) -> Self
53 | |     where
54 | |         'int: 'io
55 | |     {
...  |
62 | |         }
63 | |     }
   | |_____^

warning: missing documentation for a trait method
  --> application-support/src/io_peripherals.rs:41:5
   |
41 |     fn put_char(&self, c: char) -> Option<()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
  --> application-support/src/io_peripherals.rs:79:5
   |
79 |     fn get_chars(&self) -> Option<String>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
 --> application-support/src/init/board.rs:7:1
  |
7 | pub struct BoardDevice {}
  | ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> application-support/src/init/sim.rs:22:1
   |
22 | / lazy_static::lazy_static! {
23 | |     pub static ref EVENT_FUTURE_SHARED_STATE: SyncEventFutureSharedState =
24 | |         SyncEventFutureSharedState::new();
25 | | }
   | |_^
   |
   = note: this warning originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: missing documentation for a struct
  --> application-support/src/init/sim.rs:54:1
   |
54 | pub struct SimDevice<'io> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> application-support/src/init/sim.rs:54:1
   |
54 | / pub struct SimDevice<'io> {
55 | |     sim: Option<Sim<'io>>,
56 | |     input: Option<SourceShim>,
57 | |     output: Option<Mutex<Vec<u8>>>,
58 | | }
   | |_^

warning: missing documentation for a struct
  --> application-support/src/init/sim_rpc.rs:18:1
   |
18 | / lazy_static::lazy_static! {
19 | |     pub static ref EVENT_FUTURE_SHARED_STATE_CONT: SyncEventFutureSharedState =
20 | |         SyncEventFutureSharedState::new();
21 | | }
   | |_^
   |
   = note: this warning originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: missing documentation for a struct
  --> application-support/src/init/sim_rpc.rs:33:1
   |
33 | pub struct SimWithRpcDevice<'ss> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> application-support/src/init/sim_rpc.rs:33:1
   |
33 | / pub struct SimWithRpcDevice<'ss> {
34 | |     controller: Cont<'ss>,
35 | | }
   | |_^

warning: missing documentation for a struct
 --> application-support/src/init/websocket.rs:7:1
  |
7 | pub struct WebSocketDevice {}
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> application-support/src/init/mod.rs:50:1
   |
50 | pub struct BlackBox {
   | ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> application-support/src/init/mod.rs:55:5
   |
55 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> application-support/src/init/mod.rs:63:5
   |
63 |     pub fn put<'a, T: 'static>(&'a mut self, data: T) -> &'a mut T {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
  --> application-support/src/init/mod.rs:94:5
   |
94 |     type Config: Default; // Once associated type defaults are stable: `= ()`
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
  --> application-support/src/init/mod.rs:96:5
   |
96 |     type ControlImpl: Control + ?Sized + 's;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
  --> application-support/src/init/mod.rs:97:5
   |
97 |     type Input: InputSink + ?Sized + 's;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated type
  --> application-support/src/init/mod.rs:98:5
   |
98 |     type Output: OutputSource + ?Sized + 's;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a trait method
   --> application-support/src/init/mod.rs:100:5
    |
100 | /     fn init(
101 | |         b: &'s mut BlackBox,
102 | |     ) -> (
103 | |         &'s mut Self::ControlImpl,
...   |
106 | |         Option<&'s Self::Output>,
107 | |     );
    | |______^

warning: missing documentation for a trait method
   --> application-support/src/init/mod.rs:110:5
    |
110 | /     fn init_with_config(
111 | |         b: &'s mut BlackBox,
112 | |         _config: Self::Config,
113 | |     ) -> (
...   |
119 | |         Self::init(b)
120 | |     }
    | |_____^

warning: missing documentation for a struct
  --> application-support/src/event_loop.rs:93:1
   |
93 | pub struct Backoff {
   | ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/event_loop.rs:94:5
   |
94 |     pub num_iters: usize,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/event_loop.rs:95:5
   |
95 |     pub idle_count_sleep_threshold: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/event_loop.rs:96:5
   |
96 |     pub idle_count_divisor: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> application-support/src/event_loop.rs:97:5
   |
97 |     pub max_sleep_time_ms: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are not enforced in type aliases
  --> application-support/src/shim_support.rs:19:34
   |
19 | pub type ShimPeripheralSet<'int: 'io, 'io> = PeripheralSet<
   |                                  ^^^
   |
   = note: `#[warn(type_alias_bounds)]` on by default
help: the bound will not be checked when the type alias is used, and should be removed
   |
19 | pub type ShimPeripheralSet<'int, 'io> = PeripheralSet<
   |                               --

   Compiling lc3-tui v0.1.0 (/Users/davidrollins/SrDesign/prototype/tui)
warning: lint `legacy_directory_ownership` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/37872`
 --> tui/src/lib.rs:9:5
  |
9 |     legacy_directory_ownership,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `plugin_as_library` has been removed: `plugins have been deprecated and retired`
  --> tui/src/lib.rs:15:5
   |
15 |     plugin_as_library,
   |     ^^^^^^^^^^^^^^^^^

warning: lint `safe_extern_statics` has been removed: `converted into hard error, see https://github.com/rust-lang/rust/issues/36247`
  --> tui/src/lib.rs:17:5
   |
17 |     safe_extern_statics,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `super::super::Tui`
  --> tui/src/widgets/help.rs:7:5
   |
7  | use super::super::Tui;
   |     ^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> tui/src/lib.rs:19:5
   |
19 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `Addr`, `Reg`
  --> tui/src/widgets/mem.rs:13:15
   |
13 | use lc3_isa::{Addr, Instruction, Reg, Word};
   |               ^^^^               ^^^

warning: unused imports: `Addr`, `Instruction`, `Reg`, `Word`
  --> tui/src/widgets/regs.rs:11:15
   |
11 | use lc3_isa::{Addr, Instruction, Reg, Word};
   |               ^^^^  ^^^^^^^^^^^  ^^^  ^^^^

warning: unused imports: `Addr`, `Instruction`, `Reg`, `Word`
  --> tui/src/widgets/console.rs:11:15
   |
11 | use lc3_isa::{Addr, Instruction, Reg, Word};
   |               ^^^^  ^^^^^^^^^^^  ^^^  ^^^^

warning: unused import: `tui::layout::Rect`
  --> tui/src/widgets/mod.rs:57:5
   |
57 | use tui::layout::Rect;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `MouseButton`
  --> tui/src/tui/widget/grouped.rs:15:36
   |
15 | use crossterm::event::{MouseEvent, MouseButton, KeyEvent, KeyCode, KeyModifiers};
   |                                    ^^^^^^^^^^^

warning: unused variable: `data`
  --> tui/src/widgets/footer.rs:38:24
   |
38 |     fn draw(&mut self, data: &TuiData<'a, 'int, C, I, O>, area: Rect, buf: &mut Buffer) {
   |                        ^^^^ help: consider prefixing with an underscore: `_data`
   |
note: the lint level is defined here
  --> tui/src/lib.rs:19:5
   |
19 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

warning: unused variable: `data`
  --> tui/src/widgets/help.rs:42:24
   |
42 |     fn draw(&mut self, data: &TuiData<'a, 'int, C, I, O>, area: Rect, buf: &mut Buffer) {
   |                        ^^^^ help: consider prefixing with an underscore: `_data`

warning: unused variable: `Console`
  --> tui/src/widgets/console.rs:47:14
   |
47 |         let (Console, psr, pc) = Console_psr_pc;
   |              ^^^^^^^ help: consider prefixing with an underscore: `_Console`

warning: unused variable: `psr`
  --> tui/src/widgets/console.rs:47:23
   |
47 |         let (Console, psr, pc) = Console_psr_pc;
   |                       ^^^ help: consider prefixing with an underscore: `_psr`

warning: unused variable: `pc`
  --> tui/src/widgets/console.rs:47:28
   |
47 |         let (Console, psr, pc) = Console_psr_pc;
   |                            ^^ help: consider prefixing with an underscore: `_pc`

warning: unused variable: `c`
  --> tui/src/widgets/console.rs:91:48
   |
91 |             Key(KeyEvent { code: KeyCode::Char(c), modifiers: EMPTY }) => {
   |                                                ^ help: consider prefixing with an underscore: `_c`

warning: unused variable: `p0`
  --> tui/src/widgets/pwm.rs:63:13
   |
63 |         let p0 = match pwm_state[PwmPin::P0]{
   |             ^^ help: consider prefixing with an underscore: `_p0`
   |
note: the lint level is defined here
  --> tui/src/lib.rs:19:5
   |
19 |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

warning: unused variable: `time`
  --> tui/src/widgets/pwm.rs:68:31
   |
68 |             PwmState::Enabled(time) => {
   |                               ^^^^ help: consider prefixing with an underscore: `_time`

warning: unused variable: `p1`
   --> tui/src/widgets/pwm.rs:103:13
    |
103 |         let p1 = match pwm_state[PwmPin::P1]{
    |             ^^ help: consider prefixing with an underscore: `_p1`

warning: unused variable: `time`
   --> tui/src/widgets/pwm.rs:108:31
    |
108 |             PwmState::Enabled(time) => {
    |                               ^^^^ help: consider prefixing with an underscore: `_time`

warning: unused variable: `t0`
  --> tui/src/widgets/timers.rs:64:13
   |
64 |         let t0 = match timer_state[TimerId::T0] {
   |             ^^ help: consider prefixing with an underscore: `_t0`

warning: unused variable: `t1`
   --> tui/src/widgets/timers.rs:108:13
    |
108 |         let t1 = match timer_state[TimerId::T1] {
    |             ^^ help: consider prefixing with an underscore: `_t1`

warning: constant item is never used: `EMPTY`
   --> tui/src/widgets/regs.rs:112:9
    |
112 |         const EMPTY: KeyModifiers = KeyModifiers::empty();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> tui/src/lib.rs:19:5
    |
19  |     unused,
    |     ^^^^^^
    = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`

warning: method is never used: `propagate_until_handled`
   --> tui/src/tui/widget/grouped.rs:113:5
    |
113 |     fn propagate_until_handled(&mut self, event: WidgetEvent, data: &mut TuiData<'a, 'int, C, I, O>) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variant is never constructed: `Y`
  --> tui/src/tui/widget/mod.rs:30:5
   |
30 |     Y,
   |     ^

warning: missing documentation for a constant
  --> tui/src/debug.rs:3:1
   |
3  | pub const DEBUG_ENV_VAR: &'static str = "TUI_DEBUG";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> tui/src/lib.rs:30:5
   |
30 |     missing_docs,
   |     ^^^^^^^^^^^^

warning: missing documentation for a function
 --> tui/src/debug.rs:5:1
  |
5 | pub fn in_debug_mode() -> bool {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a function
  --> tui/src/layout.rs:20:1
   |
20 | / pub fn layout<'a, 'int: 'a, C, I, O, B: 'a>() -> impl Widget<'a, 'int, C, I, O, B>
21 | | where
22 | |     C: Control + ?Sized + 'a,
23 | |     I: InputSink + ?Sized + 'a,
...  |
27 | |     layout_tabs()
28 | | }
   | |_^

warning: missing documentation for a function
   --> tui/src/layout.rs:30:1
    |
30  | / pub fn layout_tabs<'a, 'int: 'a, C, I, O, B: 'a>() -> Tabs<'a, 'int, C, I, O, B, impl Fn() -> TabsBar<'a, String>>
31  | | where
32  | |     C: Control + ?Sized + 'a,
33  | |     I: InputSink + ?Sized + 'a,
...   |
119 | |     tabs
120 | | }
    | |_^

warning: missing documentation for a struct
 --> tui/src/widgets/empty.rs:8:1
  |
8 | pub struct Empty {
  | ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
 --> tui/src/widgets/empty.rs:9:5
  |
9 |     pub focusable: bool,
  |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/empty.rs:21:5
   |
21 |     pub fn focusable(mut self, focusable: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/tabs.rs:16:1
   |
16 | / pub struct Tabs<'a, 'int, C, I, O, B, F>
17 | | where
18 | |     C: Control + ?Sized + 'a,
19 | |     I: InputSink + ?Sized + 'a,
...  |
32 | |     current_tab: usize,
33 | | }
   | |_^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> tui/src/widgets/tabs.rs:16:1
   |
16 | / pub struct Tabs<'a, 'int, C, I, O, B, F>
17 | | where
18 | |     C: Control + ?Sized + 'a,
19 | |     I: InputSink + ?Sized + 'a,
...  |
32 | |     current_tab: usize,
33 | | }
   | |_^
   |
note: the lint level is defined here
  --> tui/src/lib.rs:28:5
   |
28 |     missing_debug_implementations,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/tabs.rs:45:5
   |
45 |     pub fn new<W: Widget<'a, 'int, C, I, O, B> + 'a, S: ToString>(first_tab: W, title: S) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/tabs.rs:54:5
   |
54 |     pub fn add<W: Widget<'a, 'int, C, I, O, B> + 'a, S: ToString>(mut self, tab: W, title: S) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/tabs.rs:61:5
   |
61 |     pub fn with_tabs_bar(mut self, func: F) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/text.rs:12:1
   |
12 | / pub struct Text<'a, 'int, C, I, O, F>
13 | | where
14 | |     C: Control + ?Sized + 'a,
15 | |     I: InputSink + ?Sized + 'a,
...  |
21 | |     _p: PhantomData<(&'int (), &'a I, &'a O, C)>,
22 | | }
   | |_^

warning: missing documentation for a method
  --> tui/src/widgets/text.rs:31:5
   |
31 |     pub fn new(func: F) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/footer.rs:12:1
   |
12 | pub struct Footer 
   | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/help.rs:14:1
   |
14 | pub struct Help 
   | ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> tui/src/widgets/help.rs:16:5
   |
16 |     pub focusable: bool
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/mem.rs:17:1
   |
17 | pub struct Mem 
   | ^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/regs.rs:15:1
   |
15 | pub struct Regs 
   | ^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/console.rs:15:1
   |
15 | pub struct Console 
   | ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/gpio.rs:12:1
   |
12 | pub struct Gpio {
   | ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> tui/src/widgets/gpio.rs:13:5
   |
13 |     pub focusable: bool,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/gpio.rs:25:5
   |
25 |     pub fn focusable(mut self, focusable: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/adc.rs:12:1
   |
12 | pub struct Adc {
   | ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> tui/src/widgets/adc.rs:13:5
   |
13 |     pub focusable: bool,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/adc.rs:25:5
   |
25 |     pub fn focusable(mut self, focusable: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/pwm.rs:12:1
   |
12 | pub struct Pwm {
   | ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> tui/src/widgets/pwm.rs:13:5
   |
13 |     pub focusable: bool,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/pwm.rs:25:5
   |
25 |     pub fn focusable(mut self, focusable: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> tui/src/widgets/timers.rs:12:1
   |
12 | pub struct Timers {
   | ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> tui/src/widgets/timers.rs:13:5
   |
13 |     pub focusable: bool,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/widgets/timers.rs:25:5
   |
25 |     pub fn focusable(mut self, focusable: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/tui/run.rs:23:5
   |
23 | /     pub fn run_with_custom_layout<B: Backend>(mut self, term: &mut Terminal<B>, mut root: impl Widget<'a, 'int, C, I, O, B>) -> Result<()>
24 | |     where
25 | |         B: ExecutableCommand<&'static str>
26 | |     {
...  |
75 | |         }).map_err(|_| err_msg("Channel disconnected; maybe something crashed?"))
76 | |     }
   | |_____^

warning: missing documentation for a method
  --> tui/src/tui/run.rs:79:5
   |
79 | /     pub fn run<B: Backend>(self, term: &mut Terminal<B>) -> Result<()>
80 | |     where
81 | |         B: ExecutableCommand<&'static str>
82 | |     {
83 | |         self.run_with_custom_layout(term, crate::layout::layout())
84 | |     }
   | |_____^

warning: missing documentation for a method
  --> tui/src/tui/run.rs:87:5
   |
87 |     pub fn run_with_crossterm(self, root_widget: Option<impl Widget<'a, 'int, C, I, O, CrosstermBackend<Stdout>>>) -> Result<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> tui/src/tui/mod.rs:25:1
   |
25 | / pub struct TuiData<'a, 'int, C, I = SourceShim, O = Mutex<Vec<u8>>>
26 | | where
27 | |     C: Control + ?Sized + 'a,
28 | |     I: InputSink + ?Sized + 'a,
...  |
40 | |     pub(in crate) wp: HashMap<Addr, usize>,
41 | | }
   | |_^

warning: missing documentation for a struct
  --> tui/src/tui/mod.rs:44:1
   |
44 | / pub struct Tui<'a, 'int, C, I = SourceShim, O = Mutex<Vec<u8>>>
45 | | where
46 | |     C: Control + ?Sized + 'a,
47 | |     I: InputSink + ?Sized + 'a,
...  |
54 | |
55 | | }
   | |_^

warning: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]` or a manual implementation
  --> tui/src/tui/mod.rs:44:1
   |
44 | / pub struct Tui<'a, 'int, C, I = SourceShim, O = Mutex<Vec<u8>>>
45 | | where
46 | |     C: Control + ?Sized + 'a,
47 | |     I: InputSink + ?Sized + 'a,
...  |
54 | |
55 | | }
   | |_^

warning: missing documentation for a method
  --> tui/src/tui/mod.rs:58:5
   |
58 |     pub fn new(sim: &'a mut C) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/tui/mod.rs:88:5
   |
88 |     pub fn attach_shims(mut self, shims: Shims<'int>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> tui/src/tui/mod.rs:93:5
   |
93 |     pub fn attach_input_output(mut self, input: &'a I, output: &'a O) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a type alias
   --> tui/src/tui/mod.rs:104:1
    |
104 | pub type DynTui<'a, 'int> = Tui<'a, 'int, DynControl<'a>, DynInputSink<'a>, DynOutputSource<'a>>;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> tui/src/tui/mod.rs:107:5
    |
107 | /     pub fn new_boxed<C>(sim: &'a mut C) -> Self
108 | |     where
109 | |         C: Control<EventFuture = EventFuture<'static, SyncEventFutureSharedState>>,
110 | |     {
111 | |         Self::new(sim)
112 | |     }
    | |_____^

warning: missing documentation for a method
   --> tui/src/tui/mod.rs:114:5
    |
114 | /     pub fn attach_input_output_boxed<I, O>(self, input: &'a I, output: &'a O) -> Self
115 | |     where
116 | |         I: InputSink + 'a,
117 | |         O: OutputSource + 'a,
118 | |     {
119 | |         self.attach_input_output(input, output)
120 | |     }
    | |_____^

warning: missing documentation for a method
   --> tui/src/tui/mod.rs:124:5
    |
124 | /     pub fn new_boxed_from_init<I: Init<'a>>(b: &'a mut BlackBox) -> Self
125 | |     where
126 | |         <I as Init<'a>>::ControlImpl: Control<EventFuture = EventFuture<'static, SyncEventFutureSharedState>> + 'a,
127 | |         <I as Init<'a>>::ControlImpl: Sized,
...   |
143 | |         tui
144 | |     }
    | |_____^

warning: missing documentation for a method
   --> tui/src/tui/mod.rs:153:5
    |
153 |     pub fn set_program_path(&mut self, path: PathBuf) -> &mut Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> tui/src/tui/mod.rs:158:5
    |
158 |     pub fn set_update_period(&mut self, period: Duration) -> &mut Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: outlives requirements can be inferred
  --> tui/src/widgets/tabs.rs:18:15
   |
18 |     C: Control + ?Sized + 'a,
   |               ^^^^^^^^^^^^^^
19 |     I: InputSink + ?Sized + 'a,
   |                 ^^^^^^^^^^^^^^
20 |     O: OutputSource + ?Sized + 'a,
   |                    ^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> tui/src/lib.rs:38:5
   |
38 |     rust_2018_idioms
   |     ^^^^^^^^^^^^^^^^
   = note: `#[warn(explicit_outlives_requirements)]` implied by `#[warn(rust_2018_idioms)]`
help: remove these bounds
   |
18 |     C: Control,
19 |     I: InputSink,
20 |     O: OutputSource,
   |

warning: outlives requirements can be inferred
  --> tui/src/widgets/text.rs:15:17
   |
15 |     I: InputSink + ?Sized + 'a,
   |                 ^^^^^^^^^^^^^^
16 |     O: OutputSource + ?Sized + 'a,
   |                    ^^^^^^^^^^^^^^
   |
help: remove these bounds
   |
15 |     I: InputSink,
16 |     O: OutputSource,
   |

warning: unused `std::result::Result` that must be used
   --> tui/src/widgets/mem.rs:290:43
    |
290 | ...                   Some(val) => {_data.sim.unset_memory_watchpoint(val);},
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> tui/src/lib.rs:19:5
    |
19  |     unused,
    |     ^^^^^^
    = note: `#[warn(unused_must_use)]` implied by `#[warn(unused)]`
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused result
   --> tui/src/widgets/mem.rs:292:45
    |
292 | ...                   Ok(val) => {_data.wp.insert(cur_addr, val);},
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> tui/src/lib.rs:37:5
    |
37  |     unused_results,
    |     ^^^^^^^^^^^^^^

warning: unused `std::result::Result` that must be used
   --> tui/src/widgets/mem.rs:302:43
    |
302 | ...                   Some(val) => {_data.sim.unset_breakpoint(val);},
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused result
   --> tui/src/widgets/mem.rs:304:45
    |
304 | ...                   Ok(val) => {_data.bp.insert(cur_addr, val);},
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable `Console_psr_pc` should have a snake case name
  --> tui/src/widgets/console.rs:46:13
   |
46 |         let Console_psr_pc = data.sim.get_registers_psr_and_pc();
   |             ^^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `console_psr_pc`
   |
note: the lint level is defined here
  --> tui/src/lib.rs:5:5
   |
5  |     bad_style,
   |     ^^^^^^^^^
   = note: `#[warn(non_snake_case)]` implied by `#[warn(bad_style)]`

warning: variable `Console` should have a snake case name
  --> tui/src/widgets/console.rs:47:14
   |
47 |         let (Console, psr, pc) = Console_psr_pc;
   |              ^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `console`

    Finished dev [unoptimized + debuginfo] target(s) in 8.16s
     Running `/Users/davidrollins/SrDesign/prototype/target/debug/tui`
Focus(GotFocus)
Focus(GotFocus)
Focus(GotFocus)
Focus(GotFocus)
Focus(GotFocus)
Focus(GotFocus)
Focus(GotFocus)
Focus(GotFocus)
Key(KeyEvent { code: Char(' '), modifiers: (empty) })
Key(KeyEvent { code: Char(' '), modifiers: (empty) })
Key(KeyEvent { code: Char(' '), modifiers: (empty) })
Key(KeyEvent { code: Char(' '), modifiers: (empty) })
Key(KeyEvent { code: Char(' '), modifiers: (empty) })
Key(KeyEvent { code: Char('r'), modifiers: (empty) })
Key(KeyEvent { code: Char('r'), modifiers: (empty) })
Key(KeyEvent { code: Char('r'), modifiers: (empty) })
Key(KeyEvent { code: Char(' '), modifiers: (empty) })
Mouse(Down(Left, 45, 35, (empty)))
Mouse(Up(Left, 45, 35, (empty)))
Mouse(Down(Left, 49, 30, (empty)))
Mouse(Up(Left, 49, 30, (empty)))
Mouse(Down(Left, 49, 30, (empty)))
Focus(LostFocus)
Mouse(Down(Left, 40, 20, (empty)))
Mouse(Up(Left, 40, 20, (empty)))
Mouse(Down(Left, 40, 20, (empty)))
Mouse(Up(Left, 40, 20, (empty)))
Mouse(Down(Left, 83, 18, (empty)))
Mouse(Up(Left, 83, 18, (empty)))
Focus(LostFocus)
Mouse(Down(Left, 73, 28, (empty)))
Mouse(Up(Left, 73, 28, (empty)))
Mouse(Down(Left, 73, 28, (empty)))
Mouse(Up(Left, 73, 28, (empty)))
Focus(LostFocus)
Mouse(Down(Left, 47, 35, (empty)))
Mouse(Up(Left, 47, 35, (empty)))
Mouse(Down(Left, 51, 26, (empty)))
Mouse(Up(Left, 51, 26, (empty)))
Key(KeyEvent { code: Char('s'), modifiers: (empty) })
Key(KeyEvent { code: Char('s'), modifiers: (empty) })
Key(KeyEvent { code: Char('s'), modifiers: (empty) })
Key(KeyEvent { code: Char('s'), modifiers: (empty) })
Key(KeyEvent { code: Char('s'), modifiers: (empty) })
Key(KeyEvent { code: Char('q'), modifiers: (empty) })
Key(KeyEvent { code: Char('q'), modifiers: (empty) })
Key(KeyEvent { code: Char('q'), modifiers: (empty) })
Key(KeyEvent { code: Char('q'), modifiers: (empty) })
